// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PastSprintsView Component should match the snapshot 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(WithStyles(PastSprintsView))>
    <WithStyles(PastSprintsView)
      dispatch={[Function]}
      sprints={
        Array [
          Object {
            "endDate": "2020-02-06T00:00:00.000Z",
            "id": "test_sprintId",
            "name": "Sprint #1",
            "owner": "Mike",
            "participants": "Mike, Bobby",
            "projects": Array [
              Object {
                "category": Object {
                  "value": "Grades & Transcripts",
                },
                "categoryLead": Object {
                  "value": "Bobby",
                },
                "completionStatus": Object {
                  "value": "",
                },
                "deliverableLink": Object {
                  "value": "",
                },
                "deliverables": Object {
                  "value": "Historical Illuminate courses matched with current equivalencies.",
                },
                "description": Object {
                  "value": "-Audit all historical expeditions grades & match courses to equivalents",
                },
                "estimatedProjectSize": Object {
                  "value": "3 - Small-to-Medium",
                },
                "externalDueDate": Object {
                  "value": "",
                },
                "id": Object {
                  "value": 1,
                },
                "manager": Object {
                  "value": "Bobby",
                },
                "mustDo": Object {
                  "value": "Nice-to-Have",
                },
                "name": Object {
                  "value": "Verify course equivalencies & Grad Requirements in Illuminate",
                },
                "notCompletedExplanation": Object {
                  "value": "",
                },
                "notes": Object {
                  "value": "",
                },
                "statusEndOfWeek1": Object {
                  "value": "25%",
                },
                "statusEndOfWeek2": Object {
                  "value": "",
                },
                "statusEndOfWeek3": Object {
                  "value": "",
                },
                "statusEndOfWeek4": Object {
                  "value": "",
                },
                "statusEndOfWeek5": Object {
                  "value": "",
                },
                "statusEndOfWeek6": Object {
                  "value": "",
                },
                "statusEndOfWeek7": Object {
                  "value": "",
                },
                "statusEndOfWeek8": Object {
                  "value": "",
                },
              },
              Object {
                "category": Object {
                  "value": "Grades & Transcripts",
                },
                "categoryLead": Object {
                  "value": "Bobby",
                },
                "completionStatus": Object {
                  "value": "",
                },
                "deliverableLink": Object {
                  "value": "",
                },
                "deliverables": Object {
                  "value": "Historical Illuminate courses matched with current equivalencies.",
                },
                "description": Object {
                  "value": "-Audit all historical expeditions grades & match courses to equivalents",
                },
                "estimatedProjectSize": Object {
                  "value": "3 - Small-to-Medium",
                },
                "externalDueDate": Object {
                  "value": "",
                },
                "id": Object {
                  "value": 2,
                },
                "manager": Object {
                  "value": "Mike",
                },
                "mustDo": Object {
                  "value": "Nice-to-Have",
                },
                "name": Object {
                  "value": "Verify course equivalencies & Grad Requirements in Illuminate",
                },
                "notCompletedExplanation": Object {
                  "value": "",
                },
                "notes": Object {
                  "value": "",
                },
                "statusEndOfWeek1": Object {
                  "value": "",
                },
                "statusEndOfWeek2": Object {
                  "value": "",
                },
                "statusEndOfWeek3": Object {
                  "value": "",
                },
                "statusEndOfWeek4": Object {
                  "value": "",
                },
                "statusEndOfWeek5": Object {
                  "value": "",
                },
                "statusEndOfWeek6": Object {
                  "value": "",
                },
                "statusEndOfWeek7": Object {
                  "value": "",
                },
                "statusEndOfWeek8": Object {
                  "value": "",
                },
              },
              Object {
                "category": Object {
                  "value": "Grades & Transcripts",
                },
                "categoryLead": Object {
                  "value": "Bobby",
                },
                "completionStatus": Object {
                  "value": "",
                },
                "deliverableLink": Object {
                  "value": "",
                },
                "deliverables": Object {
                  "value": "Historical Illuminate courses matched with current equivalencies.",
                },
                "description": Object {
                  "value": "-Audit all historical expeditions grades & match courses to equivalents",
                },
                "estimatedProjectSize": Object {
                  "value": "1 - Extra Small",
                },
                "externalDueDate": Object {
                  "value": "",
                },
                "id": Object {
                  "value": 3,
                },
                "manager": Object {
                  "value": "Bobby",
                },
                "mustDo": Object {
                  "value": "Nice-to-Have",
                },
                "name": Object {
                  "value": "Verify course equivalencies & Grad Requirements in Illuminate",
                },
                "notCompletedExplanation": Object {
                  "value": "",
                },
                "notes": Object {
                  "value": "",
                },
                "statusEndOfWeek1": Object {
                  "value": "",
                },
                "statusEndOfWeek2": Object {
                  "value": "",
                },
                "statusEndOfWeek3": Object {
                  "value": "",
                },
                "statusEndOfWeek4": Object {
                  "value": "",
                },
                "statusEndOfWeek5": Object {
                  "value": "",
                },
                "statusEndOfWeek6": Object {
                  "value": "",
                },
                "statusEndOfWeek7": Object {
                  "value": "",
                },
                "statusEndOfWeek8": Object {
                  "value": "",
                },
              },
            ],
            "startDate": "2020-01-24T00:00:00.000Z",
          },
          Object {
            "endDate": "2020-03-06T00:00:00.000Z",
            "id": "test_sprintId2",
            "name": "Sprint #2",
            "owner": "Mike",
            "participants": "Mike, Bobby",
            "projects": Array [],
            "startDate": "2020-02-10T00:00:00.000Z",
          },
        ]
      }
    >
      <PastSprintsView
        classes={
          Object {
            "button": "PastSprintsView-button-5",
            "mainViewContainer": "PastSprintsView-mainViewContainer-2",
            "overallContainer": "PastSprintsView-overallContainer-1",
            "paper": "PastSprintsView-paper-4",
            "titleContainer": "PastSprintsView-titleContainer-3",
          }
        }
        dispatch={[Function]}
        sprints={
          Array [
            Object {
              "endDate": "2020-02-06T00:00:00.000Z",
              "id": "test_sprintId",
              "name": "Sprint #1",
              "owner": "Mike",
              "participants": "Mike, Bobby",
              "projects": Array [
                Object {
                  "category": Object {
                    "value": "Grades & Transcripts",
                  },
                  "categoryLead": Object {
                    "value": "Bobby",
                  },
                  "completionStatus": Object {
                    "value": "",
                  },
                  "deliverableLink": Object {
                    "value": "",
                  },
                  "deliverables": Object {
                    "value": "Historical Illuminate courses matched with current equivalencies.",
                  },
                  "description": Object {
                    "value": "-Audit all historical expeditions grades & match courses to equivalents",
                  },
                  "estimatedProjectSize": Object {
                    "value": "3 - Small-to-Medium",
                  },
                  "externalDueDate": Object {
                    "value": "",
                  },
                  "id": Object {
                    "value": 1,
                  },
                  "manager": Object {
                    "value": "Bobby",
                  },
                  "mustDo": Object {
                    "value": "Nice-to-Have",
                  },
                  "name": Object {
                    "value": "Verify course equivalencies & Grad Requirements in Illuminate",
                  },
                  "notCompletedExplanation": Object {
                    "value": "",
                  },
                  "notes": Object {
                    "value": "",
                  },
                  "statusEndOfWeek1": Object {
                    "value": "25%",
                  },
                  "statusEndOfWeek2": Object {
                    "value": "",
                  },
                  "statusEndOfWeek3": Object {
                    "value": "",
                  },
                  "statusEndOfWeek4": Object {
                    "value": "",
                  },
                  "statusEndOfWeek5": Object {
                    "value": "",
                  },
                  "statusEndOfWeek6": Object {
                    "value": "",
                  },
                  "statusEndOfWeek7": Object {
                    "value": "",
                  },
                  "statusEndOfWeek8": Object {
                    "value": "",
                  },
                },
                Object {
                  "category": Object {
                    "value": "Grades & Transcripts",
                  },
                  "categoryLead": Object {
                    "value": "Bobby",
                  },
                  "completionStatus": Object {
                    "value": "",
                  },
                  "deliverableLink": Object {
                    "value": "",
                  },
                  "deliverables": Object {
                    "value": "Historical Illuminate courses matched with current equivalencies.",
                  },
                  "description": Object {
                    "value": "-Audit all historical expeditions grades & match courses to equivalents",
                  },
                  "estimatedProjectSize": Object {
                    "value": "3 - Small-to-Medium",
                  },
                  "externalDueDate": Object {
                    "value": "",
                  },
                  "id": Object {
                    "value": 2,
                  },
                  "manager": Object {
                    "value": "Mike",
                  },
                  "mustDo": Object {
                    "value": "Nice-to-Have",
                  },
                  "name": Object {
                    "value": "Verify course equivalencies & Grad Requirements in Illuminate",
                  },
                  "notCompletedExplanation": Object {
                    "value": "",
                  },
                  "notes": Object {
                    "value": "",
                  },
                  "statusEndOfWeek1": Object {
                    "value": "",
                  },
                  "statusEndOfWeek2": Object {
                    "value": "",
                  },
                  "statusEndOfWeek3": Object {
                    "value": "",
                  },
                  "statusEndOfWeek4": Object {
                    "value": "",
                  },
                  "statusEndOfWeek5": Object {
                    "value": "",
                  },
                  "statusEndOfWeek6": Object {
                    "value": "",
                  },
                  "statusEndOfWeek7": Object {
                    "value": "",
                  },
                  "statusEndOfWeek8": Object {
                    "value": "",
                  },
                },
                Object {
                  "category": Object {
                    "value": "Grades & Transcripts",
                  },
                  "categoryLead": Object {
                    "value": "Bobby",
                  },
                  "completionStatus": Object {
                    "value": "",
                  },
                  "deliverableLink": Object {
                    "value": "",
                  },
                  "deliverables": Object {
                    "value": "Historical Illuminate courses matched with current equivalencies.",
                  },
                  "description": Object {
                    "value": "-Audit all historical expeditions grades & match courses to equivalents",
                  },
                  "estimatedProjectSize": Object {
                    "value": "1 - Extra Small",
                  },
                  "externalDueDate": Object {
                    "value": "",
                  },
                  "id": Object {
                    "value": 3,
                  },
                  "manager": Object {
                    "value": "Bobby",
                  },
                  "mustDo": Object {
                    "value": "Nice-to-Have",
                  },
                  "name": Object {
                    "value": "Verify course equivalencies & Grad Requirements in Illuminate",
                  },
                  "notCompletedExplanation": Object {
                    "value": "",
                  },
                  "notes": Object {
                    "value": "",
                  },
                  "statusEndOfWeek1": Object {
                    "value": "",
                  },
                  "statusEndOfWeek2": Object {
                    "value": "",
                  },
                  "statusEndOfWeek3": Object {
                    "value": "",
                  },
                  "statusEndOfWeek4": Object {
                    "value": "",
                  },
                  "statusEndOfWeek5": Object {
                    "value": "",
                  },
                  "statusEndOfWeek6": Object {
                    "value": "",
                  },
                  "statusEndOfWeek7": Object {
                    "value": "",
                  },
                  "statusEndOfWeek8": Object {
                    "value": "",
                  },
                },
              ],
              "startDate": "2020-01-24T00:00:00.000Z",
            },
            Object {
              "endDate": "2020-03-06T00:00:00.000Z",
              "id": "test_sprintId2",
              "name": "Sprint #2",
              "owner": "Mike",
              "participants": "Mike, Bobby",
              "projects": Array [],
              "startDate": "2020-02-10T00:00:00.000Z",
            },
          ]
        }
      >
        <div
          className="PastSprintsView-overallContainer-1"
        >
          <div
            className="PastSprintsView-mainViewContainer-2"
          >
            <div
              className="PastSprintsView-titleContainer-3"
            >
              <WithStyles(ForwardRef(Button))
                className="PastSprintsView-button-5"
                color="primary"
                disableFocusRipple={true}
                disableRipple={true}
                variant="contained"
              >
                <ForwardRef(Button)
                  className="PastSprintsView-button-5"
                  classes={
                    Object {
                      "colorInherit": "MuiButton-colorInherit",
                      "contained": "MuiButton-contained",
                      "containedPrimary": "MuiButton-containedPrimary",
                      "containedSecondary": "MuiButton-containedSecondary",
                      "containedSizeLarge": "MuiButton-containedSizeLarge",
                      "containedSizeSmall": "MuiButton-containedSizeSmall",
                      "disableElevation": "MuiButton-disableElevation",
                      "disabled": "Mui-disabled",
                      "endIcon": "MuiButton-endIcon",
                      "focusVisible": "Mui-focusVisible",
                      "fullWidth": "MuiButton-fullWidth",
                      "iconSizeLarge": "MuiButton-iconSizeLarge",
                      "iconSizeMedium": "MuiButton-iconSizeMedium",
                      "iconSizeSmall": "MuiButton-iconSizeSmall",
                      "label": "MuiButton-label",
                      "outlined": "MuiButton-outlined",
                      "outlinedPrimary": "MuiButton-outlinedPrimary",
                      "outlinedSecondary": "MuiButton-outlinedSecondary",
                      "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                      "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                      "root": "MuiButton-root",
                      "sizeLarge": "MuiButton-sizeLarge",
                      "sizeSmall": "MuiButton-sizeSmall",
                      "startIcon": "MuiButton-startIcon",
                      "text": "MuiButton-text",
                      "textPrimary": "MuiButton-textPrimary",
                      "textSecondary": "MuiButton-textSecondary",
                      "textSizeLarge": "MuiButton-textSizeLarge",
                      "textSizeSmall": "MuiButton-textSizeSmall",
                    }
                  }
                  color="primary"
                  disableFocusRipple={true}
                  disableRipple={true}
                  variant="contained"
                >
                  <WithStyles(ForwardRef(ButtonBase))
                    className="MuiButton-root MuiButton-contained PastSprintsView-button-5 MuiButton-containedPrimary"
                    component="button"
                    disableRipple={true}
                    disabled={false}
                    focusRipple={false}
                    focusVisibleClassName="Mui-focusVisible"
                    type="button"
                  >
                    <ForwardRef(ButtonBase)
                      className="MuiButton-root MuiButton-contained PastSprintsView-button-5 MuiButton-containedPrimary"
                      classes={
                        Object {
                          "disabled": "Mui-disabled",
                          "focusVisible": "Mui-focusVisible",
                          "root": "MuiButtonBase-root",
                        }
                      }
                      component="button"
                      disableRipple={true}
                      disabled={false}
                      focusRipple={false}
                      focusVisibleClassName="Mui-focusVisible"
                      type="button"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-contained PastSprintsView-button-5 MuiButton-containedPrimary"
                        disabled={false}
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          PAST SPRINTS
                        </span>
                        <NoSsr />
                      </button>
                    </ForwardRef(ButtonBase)>
                  </WithStyles(ForwardRef(ButtonBase))>
                </ForwardRef(Button)>
              </WithStyles(ForwardRef(Button))>
            </div>
            <WithStyles(PastSprint)
              key="test_sprintId2"
              openSprintStatistics={[Function]}
              sprint={
                Object {
                  "endDate": "2020-03-06T00:00:00.000Z",
                  "id": "test_sprintId2",
                  "name": "Sprint #2",
                  "owner": "Mike",
                  "participants": "Mike, Bobby",
                  "projects": Array [],
                  "startDate": "2020-02-10T00:00:00.000Z",
                }
              }
            >
              <PastSprint
                classes={
                  Object {
                    "buttonContainer": "PastSprint-buttonContainer-39",
                    "buttonSpacing": "PastSprint-buttonSpacing-42",
                    "conditionalButtons": "PastSprint-conditionalButtons-41",
                    "conditionalButtonsContainer": "PastSprint-conditionalButtonsContainer-40",
                    "innerSprintContainer": "PastSprint-innerSprintContainer-44",
                    "sprintContainer": "PastSprint-sprintContainer-43",
                    "sprintSectionContainer": "PastSprint-sprintSectionContainer-38",
                    "tableContainer": "PastSprint-tableContainer-45",
                  }
                }
                openSprintStatistics={[Function]}
                sprint={
                  Object {
                    "endDate": "2020-03-06T00:00:00.000Z",
                    "id": "test_sprintId2",
                    "name": "Sprint #2",
                    "owner": "Mike",
                    "participants": "Mike, Bobby",
                    "projects": Array [],
                    "startDate": "2020-02-10T00:00:00.000Z",
                  }
                }
              >
                <div
                  className="PastSprint-sprintSectionContainer-38"
                >
                  <div
                    className="PastSprint-buttonContainer-39"
                  >
                    <WithStyles(ForwardRef(Button))
                      className="PastSprint-buttonSpacing-42"
                      color="primary"
                      onClick={[Function]}
                      variant="contained"
                    >
                      <ForwardRef(Button)
                        className="PastSprint-buttonSpacing-42"
                        classes={
                          Object {
                            "colorInherit": "MuiButton-colorInherit",
                            "contained": "MuiButton-contained",
                            "containedPrimary": "MuiButton-containedPrimary",
                            "containedSecondary": "MuiButton-containedSecondary",
                            "containedSizeLarge": "MuiButton-containedSizeLarge",
                            "containedSizeSmall": "MuiButton-containedSizeSmall",
                            "disableElevation": "MuiButton-disableElevation",
                            "disabled": "Mui-disabled",
                            "endIcon": "MuiButton-endIcon",
                            "focusVisible": "Mui-focusVisible",
                            "fullWidth": "MuiButton-fullWidth",
                            "iconSizeLarge": "MuiButton-iconSizeLarge",
                            "iconSizeMedium": "MuiButton-iconSizeMedium",
                            "iconSizeSmall": "MuiButton-iconSizeSmall",
                            "label": "MuiButton-label",
                            "outlined": "MuiButton-outlined",
                            "outlinedPrimary": "MuiButton-outlinedPrimary",
                            "outlinedSecondary": "MuiButton-outlinedSecondary",
                            "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                            "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                            "root": "MuiButton-root",
                            "sizeLarge": "MuiButton-sizeLarge",
                            "sizeSmall": "MuiButton-sizeSmall",
                            "startIcon": "MuiButton-startIcon",
                            "text": "MuiButton-text",
                            "textPrimary": "MuiButton-textPrimary",
                            "textSecondary": "MuiButton-textSecondary",
                            "textSizeLarge": "MuiButton-textSizeLarge",
                            "textSizeSmall": "MuiButton-textSizeSmall",
                          }
                        }
                        color="primary"
                        onClick={[Function]}
                        variant="contained"
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          className="MuiButton-root MuiButton-contained PastSprint-buttonSpacing-42 MuiButton-containedPrimary"
                          component="button"
                          disabled={false}
                          focusRipple={true}
                          focusVisibleClassName="Mui-focusVisible"
                          onClick={[Function]}
                          type="button"
                        >
                          <ForwardRef(ButtonBase)
                            className="MuiButton-root MuiButton-contained PastSprint-buttonSpacing-42 MuiButton-containedPrimary"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="button"
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="Mui-focusVisible"
                            onClick={[Function]}
                            type="button"
                          >
                            <button
                              className="MuiButtonBase-root MuiButton-root MuiButton-contained PastSprint-buttonSpacing-42 MuiButton-containedPrimary"
                              disabled={false}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex={0}
                              type="button"
                            >
                              <span
                                className="MuiButton-label"
                              >
                                Sprint #2
                              </span>
                              <NoSsr>
                                <WithStyles(undefined)
                                  center={false}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(undefined)>
                              </NoSsr>
                            </button>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(Button)>
                    </WithStyles(ForwardRef(Button))>
                  </div>
                </div>
              </PastSprint>
            </WithStyles(PastSprint)>
            <WithStyles(PastSprint)
              key="test_sprintId"
              openSprintStatistics={[Function]}
              sprint={
                Object {
                  "endDate": "2020-02-06T00:00:00.000Z",
                  "id": "test_sprintId",
                  "name": "Sprint #1",
                  "owner": "Mike",
                  "participants": "Mike, Bobby",
                  "projects": Array [
                    Object {
                      "category": Object {
                        "value": "Grades & Transcripts",
                      },
                      "categoryLead": Object {
                        "value": "Bobby",
                      },
                      "completionStatus": Object {
                        "value": "",
                      },
                      "deliverableLink": Object {
                        "value": "",
                      },
                      "deliverables": Object {
                        "value": "Historical Illuminate courses matched with current equivalencies.",
                      },
                      "description": Object {
                        "value": "-Audit all historical expeditions grades & match courses to equivalents",
                      },
                      "estimatedProjectSize": Object {
                        "value": "3 - Small-to-Medium",
                      },
                      "externalDueDate": Object {
                        "value": "",
                      },
                      "id": Object {
                        "value": 1,
                      },
                      "manager": Object {
                        "value": "Bobby",
                      },
                      "mustDo": Object {
                        "value": "Nice-to-Have",
                      },
                      "name": Object {
                        "value": "Verify course equivalencies & Grad Requirements in Illuminate",
                      },
                      "notCompletedExplanation": Object {
                        "value": "",
                      },
                      "notes": Object {
                        "value": "",
                      },
                      "statusEndOfWeek1": Object {
                        "value": "25%",
                      },
                      "statusEndOfWeek2": Object {
                        "value": "",
                      },
                      "statusEndOfWeek3": Object {
                        "value": "",
                      },
                      "statusEndOfWeek4": Object {
                        "value": "",
                      },
                      "statusEndOfWeek5": Object {
                        "value": "",
                      },
                      "statusEndOfWeek6": Object {
                        "value": "",
                      },
                      "statusEndOfWeek7": Object {
                        "value": "",
                      },
                      "statusEndOfWeek8": Object {
                        "value": "",
                      },
                    },
                    Object {
                      "category": Object {
                        "value": "Grades & Transcripts",
                      },
                      "categoryLead": Object {
                        "value": "Bobby",
                      },
                      "completionStatus": Object {
                        "value": "",
                      },
                      "deliverableLink": Object {
                        "value": "",
                      },
                      "deliverables": Object {
                        "value": "Historical Illuminate courses matched with current equivalencies.",
                      },
                      "description": Object {
                        "value": "-Audit all historical expeditions grades & match courses to equivalents",
                      },
                      "estimatedProjectSize": Object {
                        "value": "3 - Small-to-Medium",
                      },
                      "externalDueDate": Object {
                        "value": "",
                      },
                      "id": Object {
                        "value": 2,
                      },
                      "manager": Object {
                        "value": "Mike",
                      },
                      "mustDo": Object {
                        "value": "Nice-to-Have",
                      },
                      "name": Object {
                        "value": "Verify course equivalencies & Grad Requirements in Illuminate",
                      },
                      "notCompletedExplanation": Object {
                        "value": "",
                      },
                      "notes": Object {
                        "value": "",
                      },
                      "statusEndOfWeek1": Object {
                        "value": "",
                      },
                      "statusEndOfWeek2": Object {
                        "value": "",
                      },
                      "statusEndOfWeek3": Object {
                        "value": "",
                      },
                      "statusEndOfWeek4": Object {
                        "value": "",
                      },
                      "statusEndOfWeek5": Object {
                        "value": "",
                      },
                      "statusEndOfWeek6": Object {
                        "value": "",
                      },
                      "statusEndOfWeek7": Object {
                        "value": "",
                      },
                      "statusEndOfWeek8": Object {
                        "value": "",
                      },
                    },
                    Object {
                      "category": Object {
                        "value": "Grades & Transcripts",
                      },
                      "categoryLead": Object {
                        "value": "Bobby",
                      },
                      "completionStatus": Object {
                        "value": "",
                      },
                      "deliverableLink": Object {
                        "value": "",
                      },
                      "deliverables": Object {
                        "value": "Historical Illuminate courses matched with current equivalencies.",
                      },
                      "description": Object {
                        "value": "-Audit all historical expeditions grades & match courses to equivalents",
                      },
                      "estimatedProjectSize": Object {
                        "value": "1 - Extra Small",
                      },
                      "externalDueDate": Object {
                        "value": "",
                      },
                      "id": Object {
                        "value": 3,
                      },
                      "manager": Object {
                        "value": "Bobby",
                      },
                      "mustDo": Object {
                        "value": "Nice-to-Have",
                      },
                      "name": Object {
                        "value": "Verify course equivalencies & Grad Requirements in Illuminate",
                      },
                      "notCompletedExplanation": Object {
                        "value": "",
                      },
                      "notes": Object {
                        "value": "",
                      },
                      "statusEndOfWeek1": Object {
                        "value": "",
                      },
                      "statusEndOfWeek2": Object {
                        "value": "",
                      },
                      "statusEndOfWeek3": Object {
                        "value": "",
                      },
                      "statusEndOfWeek4": Object {
                        "value": "",
                      },
                      "statusEndOfWeek5": Object {
                        "value": "",
                      },
                      "statusEndOfWeek6": Object {
                        "value": "",
                      },
                      "statusEndOfWeek7": Object {
                        "value": "",
                      },
                      "statusEndOfWeek8": Object {
                        "value": "",
                      },
                    },
                  ],
                  "startDate": "2020-01-24T00:00:00.000Z",
                }
              }
            >
              <PastSprint
                classes={
                  Object {
                    "buttonContainer": "PastSprint-buttonContainer-39",
                    "buttonSpacing": "PastSprint-buttonSpacing-42",
                    "conditionalButtons": "PastSprint-conditionalButtons-41",
                    "conditionalButtonsContainer": "PastSprint-conditionalButtonsContainer-40",
                    "innerSprintContainer": "PastSprint-innerSprintContainer-44",
                    "sprintContainer": "PastSprint-sprintContainer-43",
                    "sprintSectionContainer": "PastSprint-sprintSectionContainer-38",
                    "tableContainer": "PastSprint-tableContainer-45",
                  }
                }
                openSprintStatistics={[Function]}
                sprint={
                  Object {
                    "endDate": "2020-02-06T00:00:00.000Z",
                    "id": "test_sprintId",
                    "name": "Sprint #1",
                    "owner": "Mike",
                    "participants": "Mike, Bobby",
                    "projects": Array [
                      Object {
                        "category": Object {
                          "value": "Grades & Transcripts",
                        },
                        "categoryLead": Object {
                          "value": "Bobby",
                        },
                        "completionStatus": Object {
                          "value": "",
                        },
                        "deliverableLink": Object {
                          "value": "",
                        },
                        "deliverables": Object {
                          "value": "Historical Illuminate courses matched with current equivalencies.",
                        },
                        "description": Object {
                          "value": "-Audit all historical expeditions grades & match courses to equivalents",
                        },
                        "estimatedProjectSize": Object {
                          "value": "3 - Small-to-Medium",
                        },
                        "externalDueDate": Object {
                          "value": "",
                        },
                        "id": Object {
                          "value": 1,
                        },
                        "manager": Object {
                          "value": "Bobby",
                        },
                        "mustDo": Object {
                          "value": "Nice-to-Have",
                        },
                        "name": Object {
                          "value": "Verify course equivalencies & Grad Requirements in Illuminate",
                        },
                        "notCompletedExplanation": Object {
                          "value": "",
                        },
                        "notes": Object {
                          "value": "",
                        },
                        "statusEndOfWeek1": Object {
                          "value": "25%",
                        },
                        "statusEndOfWeek2": Object {
                          "value": "",
                        },
                        "statusEndOfWeek3": Object {
                          "value": "",
                        },
                        "statusEndOfWeek4": Object {
                          "value": "",
                        },
                        "statusEndOfWeek5": Object {
                          "value": "",
                        },
                        "statusEndOfWeek6": Object {
                          "value": "",
                        },
                        "statusEndOfWeek7": Object {
                          "value": "",
                        },
                        "statusEndOfWeek8": Object {
                          "value": "",
                        },
                      },
                      Object {
                        "category": Object {
                          "value": "Grades & Transcripts",
                        },
                        "categoryLead": Object {
                          "value": "Bobby",
                        },
                        "completionStatus": Object {
                          "value": "",
                        },
                        "deliverableLink": Object {
                          "value": "",
                        },
                        "deliverables": Object {
                          "value": "Historical Illuminate courses matched with current equivalencies.",
                        },
                        "description": Object {
                          "value": "-Audit all historical expeditions grades & match courses to equivalents",
                        },
                        "estimatedProjectSize": Object {
                          "value": "3 - Small-to-Medium",
                        },
                        "externalDueDate": Object {
                          "value": "",
                        },
                        "id": Object {
                          "value": 2,
                        },
                        "manager": Object {
                          "value": "Mike",
                        },
                        "mustDo": Object {
                          "value": "Nice-to-Have",
                        },
                        "name": Object {
                          "value": "Verify course equivalencies & Grad Requirements in Illuminate",
                        },
                        "notCompletedExplanation": Object {
                          "value": "",
                        },
                        "notes": Object {
                          "value": "",
                        },
                        "statusEndOfWeek1": Object {
                          "value": "",
                        },
                        "statusEndOfWeek2": Object {
                          "value": "",
                        },
                        "statusEndOfWeek3": Object {
                          "value": "",
                        },
                        "statusEndOfWeek4": Object {
                          "value": "",
                        },
                        "statusEndOfWeek5": Object {
                          "value": "",
                        },
                        "statusEndOfWeek6": Object {
                          "value": "",
                        },
                        "statusEndOfWeek7": Object {
                          "value": "",
                        },
                        "statusEndOfWeek8": Object {
                          "value": "",
                        },
                      },
                      Object {
                        "category": Object {
                          "value": "Grades & Transcripts",
                        },
                        "categoryLead": Object {
                          "value": "Bobby",
                        },
                        "completionStatus": Object {
                          "value": "",
                        },
                        "deliverableLink": Object {
                          "value": "",
                        },
                        "deliverables": Object {
                          "value": "Historical Illuminate courses matched with current equivalencies.",
                        },
                        "description": Object {
                          "value": "-Audit all historical expeditions grades & match courses to equivalents",
                        },
                        "estimatedProjectSize": Object {
                          "value": "1 - Extra Small",
                        },
                        "externalDueDate": Object {
                          "value": "",
                        },
                        "id": Object {
                          "value": 3,
                        },
                        "manager": Object {
                          "value": "Bobby",
                        },
                        "mustDo": Object {
                          "value": "Nice-to-Have",
                        },
                        "name": Object {
                          "value": "Verify course equivalencies & Grad Requirements in Illuminate",
                        },
                        "notCompletedExplanation": Object {
                          "value": "",
                        },
                        "notes": Object {
                          "value": "",
                        },
                        "statusEndOfWeek1": Object {
                          "value": "",
                        },
                        "statusEndOfWeek2": Object {
                          "value": "",
                        },
                        "statusEndOfWeek3": Object {
                          "value": "",
                        },
                        "statusEndOfWeek4": Object {
                          "value": "",
                        },
                        "statusEndOfWeek5": Object {
                          "value": "",
                        },
                        "statusEndOfWeek6": Object {
                          "value": "",
                        },
                        "statusEndOfWeek7": Object {
                          "value": "",
                        },
                        "statusEndOfWeek8": Object {
                          "value": "",
                        },
                      },
                    ],
                    "startDate": "2020-01-24T00:00:00.000Z",
                  }
                }
              >
                <div
                  className="PastSprint-sprintSectionContainer-38"
                >
                  <div
                    className="PastSprint-buttonContainer-39"
                  >
                    <WithStyles(ForwardRef(Button))
                      className="PastSprint-buttonSpacing-42"
                      color="primary"
                      onClick={[Function]}
                      variant="contained"
                    >
                      <ForwardRef(Button)
                        className="PastSprint-buttonSpacing-42"
                        classes={
                          Object {
                            "colorInherit": "MuiButton-colorInherit",
                            "contained": "MuiButton-contained",
                            "containedPrimary": "MuiButton-containedPrimary",
                            "containedSecondary": "MuiButton-containedSecondary",
                            "containedSizeLarge": "MuiButton-containedSizeLarge",
                            "containedSizeSmall": "MuiButton-containedSizeSmall",
                            "disableElevation": "MuiButton-disableElevation",
                            "disabled": "Mui-disabled",
                            "endIcon": "MuiButton-endIcon",
                            "focusVisible": "Mui-focusVisible",
                            "fullWidth": "MuiButton-fullWidth",
                            "iconSizeLarge": "MuiButton-iconSizeLarge",
                            "iconSizeMedium": "MuiButton-iconSizeMedium",
                            "iconSizeSmall": "MuiButton-iconSizeSmall",
                            "label": "MuiButton-label",
                            "outlined": "MuiButton-outlined",
                            "outlinedPrimary": "MuiButton-outlinedPrimary",
                            "outlinedSecondary": "MuiButton-outlinedSecondary",
                            "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                            "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                            "root": "MuiButton-root",
                            "sizeLarge": "MuiButton-sizeLarge",
                            "sizeSmall": "MuiButton-sizeSmall",
                            "startIcon": "MuiButton-startIcon",
                            "text": "MuiButton-text",
                            "textPrimary": "MuiButton-textPrimary",
                            "textSecondary": "MuiButton-textSecondary",
                            "textSizeLarge": "MuiButton-textSizeLarge",
                            "textSizeSmall": "MuiButton-textSizeSmall",
                          }
                        }
                        color="primary"
                        onClick={[Function]}
                        variant="contained"
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          className="MuiButton-root MuiButton-contained PastSprint-buttonSpacing-42 MuiButton-containedPrimary"
                          component="button"
                          disabled={false}
                          focusRipple={true}
                          focusVisibleClassName="Mui-focusVisible"
                          onClick={[Function]}
                          type="button"
                        >
                          <ForwardRef(ButtonBase)
                            className="MuiButton-root MuiButton-contained PastSprint-buttonSpacing-42 MuiButton-containedPrimary"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="button"
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="Mui-focusVisible"
                            onClick={[Function]}
                            type="button"
                          >
                            <button
                              className="MuiButtonBase-root MuiButton-root MuiButton-contained PastSprint-buttonSpacing-42 MuiButton-containedPrimary"
                              disabled={false}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex={0}
                              type="button"
                            >
                              <span
                                className="MuiButton-label"
                              >
                                Sprint #1
                              </span>
                              <NoSsr>
                                <WithStyles(undefined)
                                  center={false}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(undefined)>
                              </NoSsr>
                            </button>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(Button)>
                    </WithStyles(ForwardRef(Button))>
                  </div>
                </div>
              </PastSprint>
            </WithStyles(PastSprint)>
          </div>
          <WithStyles(footer)>
            <footer
              classes={
                Object {
                  "copyright": "footer-copyright-47",
                  "flexDisplay": "footer-flexDisplay-48",
                  "footer": "footer-footer-46",
                }
              }
            >
              <footer
                className="footer-footer-46"
              >
                <WithStyles(ForwardRef(Typography))
                  align="center"
                  gutterBottom={true}
                  variant="h6"
                >
                  <ForwardRef(Typography)
                    align="center"
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    gutterBottom={true}
                    variant="h6"
                  >
                    <h6
                      className="MuiTypography-root MuiTypography-h6 MuiTypography-gutterBottom MuiTypography-alignCenter"
                    >
                      Built with React and Material UI.
                    </h6>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
                <WithStyles(ForwardRef(Typography))
                  align="center"
                  className="footer-flexDisplay-48"
                  color="textSecondary"
                  component="p"
                  variant="subtitle1"
                >
                  <ForwardRef(Typography)
                    align="center"
                    className="footer-flexDisplay-48"
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    color="textSecondary"
                    component="p"
                    variant="subtitle1"
                  >
                    <p
                      className="MuiTypography-root footer-flexDisplay-48 MuiTypography-subtitle1 MuiTypography-colorTextSecondary MuiTypography-alignCenter"
                    >
                      <span>
                        Made with 
                      </span>
                      <ForwardRef
                        color="secondary"
                        fontSize="small"
                      >
                        <WithStyles(ForwardRef(SvgIcon))
                          color="secondary"
                          fontSize="small"
                        >
                          <ForwardRef(SvgIcon)
                            classes={
                              Object {
                                "colorAction": "MuiSvgIcon-colorAction",
                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                "colorError": "MuiSvgIcon-colorError",
                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                "root": "MuiSvgIcon-root",
                              }
                            }
                            color="secondary"
                            fontSize="small"
                          >
                            <svg
                              aria-hidden="true"
                              className="MuiSvgIcon-root MuiSvgIcon-colorSecondary MuiSvgIcon-fontSizeSmall"
                              focusable="false"
                              role="presentation"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"
                              />
                            </svg>
                          </ForwardRef(SvgIcon)>
                        </WithStyles(ForwardRef(SvgIcon))>
                      </ForwardRef>
                      <span>
                         in Burlingame, CA.
                      </span>
                    </p>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
                <WithStyles(ForwardRef(Typography))
                  align="center"
                  className="footer-copyright-47"
                  color="textSecondary"
                  variant="body2"
                >
                  <ForwardRef(Typography)
                    align="center"
                    className="footer-copyright-47"
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    color="textSecondary"
                    variant="body2"
                  >
                    <p
                      className="MuiTypography-root footer-copyright-47 MuiTypography-body2 MuiTypography-colorTextSecondary MuiTypography-alignCenter"
                    >
                      © 
                      <WithStyles(ForwardRef(Link))
                        color="inherit"
                        href="https://www.mikedunham.org"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        <ForwardRef(Link)
                          classes={
                            Object {
                              "button": "MuiLink-button",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiLink-root",
                              "underlineAlways": "MuiLink-underlineAlways",
                              "underlineHover": "MuiLink-underlineHover",
                              "underlineNone": "MuiLink-underlineNone",
                            }
                          }
                          color="inherit"
                          href="https://www.mikedunham.org"
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          <WithStyles(ForwardRef(Typography))
                            className="MuiLink-root MuiLink-underlineHover"
                            color="inherit"
                            component="a"
                            href="https://www.mikedunham.org"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            rel="noopener noreferrer"
                            target="_blank"
                            variant="inherit"
                          >
                            <ForwardRef(Typography)
                              className="MuiLink-root MuiLink-underlineHover"
                              classes={
                                Object {
                                  "alignCenter": "MuiTypography-alignCenter",
                                  "alignJustify": "MuiTypography-alignJustify",
                                  "alignLeft": "MuiTypography-alignLeft",
                                  "alignRight": "MuiTypography-alignRight",
                                  "body1": "MuiTypography-body1",
                                  "body2": "MuiTypography-body2",
                                  "button": "MuiTypography-button",
                                  "caption": "MuiTypography-caption",
                                  "colorError": "MuiTypography-colorError",
                                  "colorInherit": "MuiTypography-colorInherit",
                                  "colorPrimary": "MuiTypography-colorPrimary",
                                  "colorSecondary": "MuiTypography-colorSecondary",
                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                  "displayBlock": "MuiTypography-displayBlock",
                                  "displayInline": "MuiTypography-displayInline",
                                  "gutterBottom": "MuiTypography-gutterBottom",
                                  "h1": "MuiTypography-h1",
                                  "h2": "MuiTypography-h2",
                                  "h3": "MuiTypography-h3",
                                  "h4": "MuiTypography-h4",
                                  "h5": "MuiTypography-h5",
                                  "h6": "MuiTypography-h6",
                                  "noWrap": "MuiTypography-noWrap",
                                  "overline": "MuiTypography-overline",
                                  "paragraph": "MuiTypography-paragraph",
                                  "root": "MuiTypography-root",
                                  "srOnly": "MuiTypography-srOnly",
                                  "subtitle1": "MuiTypography-subtitle1",
                                  "subtitle2": "MuiTypography-subtitle2",
                                }
                              }
                              color="inherit"
                              component="a"
                              href="https://www.mikedunham.org"
                              onBlur={[Function]}
                              onFocus={[Function]}
                              rel="noopener noreferrer"
                              target="_blank"
                              variant="inherit"
                            >
                              <a
                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorInherit"
                                href="https://www.mikedunham.org"
                                onBlur={[Function]}
                                onFocus={[Function]}
                                rel="noopener noreferrer"
                                target="_blank"
                              >
                                Mike Dunham
                              </a>
                            </ForwardRef(Typography)>
                          </WithStyles(ForwardRef(Typography))>
                        </ForwardRef(Link)>
                      </WithStyles(ForwardRef(Link))>
                       
                      2020
                    </p>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
              </footer>
            </footer>
          </WithStyles(footer)>
        </div>
      </PastSprintsView>
    </WithStyles(PastSprintsView)>
  </Connect(WithStyles(PastSprintsView))>
</Provider>
`;
