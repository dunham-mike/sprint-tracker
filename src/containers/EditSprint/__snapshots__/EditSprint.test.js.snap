// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditSprint Component should match the snapshot 1`] = `
<editSprint
  actionType="edit"
  authentication={
    Object {
      "token": "test_token",
      "userId": "test_userId",
    }
  }
  classes={Object {}}
  onAddSprint={[MockFunction]}
  onCloseSprint={[MockFunction]}
  onDeleteSprint={[MockFunction]}
  onUpdateSprint={[MockFunction]}
  sprintId="test_sprintId"
  sprints={
    Array [
      Object {
        "endDate": "2020-02-06T00:00:00.000Z",
        "id": "test_sprintId",
        "name": "Sprint #1",
        "owner": "Mike",
        "participants": "Mike, Bobby",
        "projects": Array [
          Object {
            "category": Object {
              "value": "Grades & Transcripts",
            },
            "categoryLead": Object {
              "value": "Bobby",
            },
            "completionStatus": Object {
              "value": "",
            },
            "deliverableLink": Object {
              "value": "",
            },
            "deliverables": Object {
              "value": "Historical Illuminate courses matched with current equivalencies.",
            },
            "description": Object {
              "value": "-Audit all historical expeditions grades & match courses to equivalents",
            },
            "estimatedProjectSize": Object {
              "value": "3 - Small-to-Medium",
            },
            "externalDueDate": Object {
              "value": "",
            },
            "id": Object {
              "value": 1,
            },
            "manager": Object {
              "value": "Bobby",
            },
            "mustDo": Object {
              "value": "Nice-to-Have",
            },
            "name": Object {
              "value": "Verify course equivalencies & Grad Requirements in Illuminate",
            },
            "notCompletedExplanation": Object {
              "value": "",
            },
            "notes": Object {
              "value": "",
            },
            "statusEndOfWeek1": Object {
              "value": "25%",
            },
            "statusEndOfWeek2": Object {
              "value": "",
            },
            "statusEndOfWeek3": Object {
              "value": "",
            },
            "statusEndOfWeek4": Object {
              "value": "",
            },
            "statusEndOfWeek5": Object {
              "value": "",
            },
            "statusEndOfWeek6": Object {
              "value": "",
            },
            "statusEndOfWeek7": Object {
              "value": "",
            },
            "statusEndOfWeek8": Object {
              "value": "",
            },
          },
          Object {
            "category": Object {
              "value": "Grades & Transcripts",
            },
            "categoryLead": Object {
              "value": "Bobby",
            },
            "completionStatus": Object {
              "value": "",
            },
            "deliverableLink": Object {
              "value": "",
            },
            "deliverables": Object {
              "value": "Historical Illuminate courses matched with current equivalencies.",
            },
            "description": Object {
              "value": "-Audit all historical expeditions grades & match courses to equivalents",
            },
            "estimatedProjectSize": Object {
              "value": "3 - Small-to-Medium",
            },
            "externalDueDate": Object {
              "value": "",
            },
            "id": Object {
              "value": 2,
            },
            "manager": Object {
              "value": "Mike",
            },
            "mustDo": Object {
              "value": "Nice-to-Have",
            },
            "name": Object {
              "value": "Verify course equivalencies & Grad Requirements in Illuminate",
            },
            "notCompletedExplanation": Object {
              "value": "",
            },
            "notes": Object {
              "value": "",
            },
            "statusEndOfWeek1": Object {
              "value": "",
            },
            "statusEndOfWeek2": Object {
              "value": "",
            },
            "statusEndOfWeek3": Object {
              "value": "",
            },
            "statusEndOfWeek4": Object {
              "value": "",
            },
            "statusEndOfWeek5": Object {
              "value": "",
            },
            "statusEndOfWeek6": Object {
              "value": "",
            },
            "statusEndOfWeek7": Object {
              "value": "",
            },
            "statusEndOfWeek8": Object {
              "value": "",
            },
          },
          Object {
            "category": Object {
              "value": "Grades & Transcripts",
            },
            "categoryLead": Object {
              "value": "Bobby",
            },
            "completionStatus": Object {
              "value": "",
            },
            "deliverableLink": Object {
              "value": "",
            },
            "deliverables": Object {
              "value": "Historical Illuminate courses matched with current equivalencies.",
            },
            "description": Object {
              "value": "-Audit all historical expeditions grades & match courses to equivalents",
            },
            "estimatedProjectSize": Object {
              "value": "1 - Extra Small",
            },
            "externalDueDate": Object {
              "value": "",
            },
            "id": Object {
              "value": 3,
            },
            "manager": Object {
              "value": "Bobby",
            },
            "mustDo": Object {
              "value": "Nice-to-Have",
            },
            "name": Object {
              "value": "Verify course equivalencies & Grad Requirements in Illuminate",
            },
            "notCompletedExplanation": Object {
              "value": "",
            },
            "notes": Object {
              "value": "",
            },
            "statusEndOfWeek1": Object {
              "value": "",
            },
            "statusEndOfWeek2": Object {
              "value": "",
            },
            "statusEndOfWeek3": Object {
              "value": "",
            },
            "statusEndOfWeek4": Object {
              "value": "",
            },
            "statusEndOfWeek5": Object {
              "value": "",
            },
            "statusEndOfWeek6": Object {
              "value": "",
            },
            "statusEndOfWeek7": Object {
              "value": "",
            },
            "statusEndOfWeek8": Object {
              "value": "",
            },
          },
        ],
        "startDate": "2020-01-24T00:00:00.000Z",
      },
      Object {
        "endDate": "2020-03-06T00:00:00.000Z",
        "id": "test_sprintId2",
        "name": "Sprint #2",
        "owner": "Mike",
        "participants": "Mike, Bobby",
        "projects": Array [],
        "startDate": "2020-02-10T00:00:00.000Z",
      },
    ]
  }
>
  <ForwardRef(Modal)
    aria-describedby="simple-modal-description"
    aria-labelledby="simple-modal-title"
    onClose={[MockFunction]}
    open={true}
  >
    <ForwardRef(Portal)
      disablePortal={false}
    >
      <Portal
        containerInfo={
          <body
            style="padding-right: 0px; overflow: hidden;"
          >
            <div
              aria-describedby="simple-modal-description"
              aria-labelledby="simple-modal-title"
              role="presentation"
              style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
            >
              <div
                aria-hidden="true"
                style="z-index: -1; position: fixed; right: 0px; bottom: 0px; top: 0px; left: 0px; background-color: rgba(0, 0, 0, 0.5);"
              />
              <div
                data-test="sentinelStart"
                tabindex="0"
              />
              <div
                class="MuiPaper-root MuiPaper-elevation1 MuiPaper-rounded"
                tabindex="-1"
              >
                <div>
                  <div
                    class="cancelButton-cancelButtonContainer-29"
                  >
                    <svg
                      aria-hidden="true"
                      class="MuiSvgIcon-root MuiSvgIcon-fontSizeLarge"
                      focusable="false"
                      role="presentation"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm3.59-13L12 10.59 8.41 7 7 8.41 10.59 12 7 15.59 8.41 17 12 13.41 15.59 17 17 15.59 13.41 12 17 8.41z"
                      />
                    </svg>
                  </div>
                </div>
                <div>
                  <div>
                    <h4
                      class="MuiTypography-root MuiTypography-h4"
                    >
                      Edit
                       Sprint
                    </h4>
                  </div>
                  <div>
                    Edit
                     the sprint information and click "Save" below. * = required field
                  </div>
                  <div>
                    <form>
                      <div
                        class="input-Input-69"
                      >
                        <label
                          class="input-Label-70"
                        >
                          Sprint ID
                          *
                        </label>
                        <div>
                          test_sprintId
                        </div>
                      </div>
                      <div
                        class="input-Input-69"
                      >
                        <label
                          class="input-Label-70"
                        >
                          Sprint Name (e.g., Sprint #4)
                          *
                        </label>
                        <input
                          class="input-InputElement-71"
                          value="Sprint #1"
                        />
                      </div>
                      <div
                        class="input-Input-69"
                      >
                        <label
                          class="input-Label-70"
                        >
                          Start Date
                          *
                        </label>
                        <div
                          class="rdt"
                        >
                          <input
                            class="customInput"
                            readonly=""
                            type="text"
                            value="Fri. Jan. 24, 2020"
                          />
                          <div
                            class="rdtPicker"
                          >
                            <div
                              class="rdtDays"
                            >
                              <table>
                                <thead>
                                  <tr>
                                    <th
                                      class="rdtPrev"
                                    >
                                      <span>
                                        ‹
                                      </span>
                                    </th>
                                    <th
                                      class="rdtSwitch"
                                      colspan="5"
                                      data-value="0"
                                    >
                                      January 2020
                                    </th>
                                    <th
                                      class="rdtNext"
                                    >
                                      <span>
                                        ›
                                      </span>
                                    </th>
                                  </tr>
                                  <tr>
                                    <th
                                      class="dow"
                                    >
                                      Su
                                    </th>
                                    <th
                                      class="dow"
                                    >
                                      Mo
                                    </th>
                                    <th
                                      class="dow"
                                    >
                                      Tu
                                    </th>
                                    <th
                                      class="dow"
                                    >
                                      We
                                    </th>
                                    <th
                                      class="dow"
                                    >
                                      Th
                                    </th>
                                    <th
                                      class="dow"
                                    >
                                      Fr
                                    </th>
                                    <th
                                      class="dow"
                                    >
                                      Sa
                                    </th>
                                  </tr>
                                </thead>
                                <tbody>
                                  <tr>
                                    <td
                                      class="rdtDay rdtOld"
                                      data-value="29"
                                    >
                                      29
                                    </td>
                                    <td
                                      class="rdtDay rdtOld"
                                      data-value="30"
                                    >
                                      30
                                    </td>
                                    <td
                                      class="rdtDay rdtOld"
                                      data-value="31"
                                    >
                                      31
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="1"
                                    >
                                      1
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="2"
                                    >
                                      2
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="3"
                                    >
                                      3
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="4"
                                    >
                                      4
                                    </td>
                                  </tr>
                                  <tr>
                                    <td
                                      class="rdtDay"
                                      data-value="5"
                                    >
                                      5
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="6"
                                    >
                                      6
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="7"
                                    >
                                      7
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="8"
                                    >
                                      8
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="9"
                                    >
                                      9
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="10"
                                    >
                                      10
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="11"
                                    >
                                      11
                                    </td>
                                  </tr>
                                  <tr>
                                    <td
                                      class="rdtDay"
                                      data-value="12"
                                    >
                                      12
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="13"
                                    >
                                      13
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="14"
                                    >
                                      14
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="15"
                                    >
                                      15
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="16"
                                    >
                                      16
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="17"
                                    >
                                      17
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="18"
                                    >
                                      18
                                    </td>
                                  </tr>
                                  <tr>
                                    <td
                                      class="rdtDay"
                                      data-value="19"
                                    >
                                      19
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="20"
                                    >
                                      20
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="21"
                                    >
                                      21
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="22"
                                    >
                                      22
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="23"
                                    >
                                      23
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="24"
                                    >
                                      24
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="25"
                                    >
                                      25
                                    </td>
                                  </tr>
                                  <tr>
                                    <td
                                      class="rdtDay"
                                      data-value="26"
                                    >
                                      26
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="27"
                                    >
                                      27
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="28"
                                    >
                                      28
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="29"
                                    >
                                      29
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="30"
                                    >
                                      30
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="31"
                                    >
                                      31
                                    </td>
                                    <td
                                      class="rdtDay rdtNew"
                                      data-value="1"
                                    >
                                      1
                                    </td>
                                  </tr>
                                  <tr>
                                    <td
                                      class="rdtDay rdtNew"
                                      data-value="2"
                                    >
                                      2
                                    </td>
                                    <td
                                      class="rdtDay rdtNew"
                                      data-value="3"
                                    >
                                      3
                                    </td>
                                    <td
                                      class="rdtDay rdtNew"
                                      data-value="4"
                                    >
                                      4
                                    </td>
                                    <td
                                      class="rdtDay rdtNew"
                                      data-value="5"
                                    >
                                      5
                                    </td>
                                    <td
                                      class="rdtDay rdtNew"
                                      data-value="6"
                                    >
                                      6
                                    </td>
                                    <td
                                      class="rdtDay rdtNew"
                                      data-value="7"
                                    >
                                      7
                                    </td>
                                    <td
                                      class="rdtDay rdtNew"
                                      data-value="8"
                                    >
                                      8
                                    </td>
                                  </tr>
                                </tbody>
                              </table>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div
                        class="input-Input-69"
                      >
                        <label
                          class="input-Label-70"
                        >
                          End Date
                          *
                        </label>
                        <div
                          class="rdt"
                        >
                          <input
                            class="customInput"
                            readonly=""
                            type="text"
                            value="Thu. Feb. 6, 2020"
                          />
                          <div
                            class="rdtPicker"
                          >
                            <div
                              class="rdtDays"
                            >
                              <table>
                                <thead>
                                  <tr>
                                    <th
                                      class="rdtPrev"
                                    >
                                      <span>
                                        ‹
                                      </span>
                                    </th>
                                    <th
                                      class="rdtSwitch"
                                      colspan="5"
                                      data-value="1"
                                    >
                                      February 2020
                                    </th>
                                    <th
                                      class="rdtNext"
                                    >
                                      <span>
                                        ›
                                      </span>
                                    </th>
                                  </tr>
                                  <tr>
                                    <th
                                      class="dow"
                                    >
                                      Su
                                    </th>
                                    <th
                                      class="dow"
                                    >
                                      Mo
                                    </th>
                                    <th
                                      class="dow"
                                    >
                                      Tu
                                    </th>
                                    <th
                                      class="dow"
                                    >
                                      We
                                    </th>
                                    <th
                                      class="dow"
                                    >
                                      Th
                                    </th>
                                    <th
                                      class="dow"
                                    >
                                      Fr
                                    </th>
                                    <th
                                      class="dow"
                                    >
                                      Sa
                                    </th>
                                  </tr>
                                </thead>
                                <tbody>
                                  <tr>
                                    <td
                                      class="rdtDay rdtOld"
                                      data-value="26"
                                    >
                                      26
                                    </td>
                                    <td
                                      class="rdtDay rdtOld"
                                      data-value="27"
                                    >
                                      27
                                    </td>
                                    <td
                                      class="rdtDay rdtOld"
                                      data-value="28"
                                    >
                                      28
                                    </td>
                                    <td
                                      class="rdtDay rdtOld"
                                      data-value="29"
                                    >
                                      29
                                    </td>
                                    <td
                                      class="rdtDay rdtOld"
                                      data-value="30"
                                    >
                                      30
                                    </td>
                                    <td
                                      class="rdtDay rdtOld"
                                      data-value="31"
                                    >
                                      31
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="1"
                                    >
                                      1
                                    </td>
                                  </tr>
                                  <tr>
                                    <td
                                      class="rdtDay"
                                      data-value="2"
                                    >
                                      2
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="3"
                                    >
                                      3
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="4"
                                    >
                                      4
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="5"
                                    >
                                      5
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="6"
                                    >
                                      6
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="7"
                                    >
                                      7
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="8"
                                    >
                                      8
                                    </td>
                                  </tr>
                                  <tr>
                                    <td
                                      class="rdtDay"
                                      data-value="9"
                                    >
                                      9
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="10"
                                    >
                                      10
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="11"
                                    >
                                      11
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="12"
                                    >
                                      12
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="13"
                                    >
                                      13
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="14"
                                    >
                                      14
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="15"
                                    >
                                      15
                                    </td>
                                  </tr>
                                  <tr>
                                    <td
                                      class="rdtDay"
                                      data-value="16"
                                    >
                                      16
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="17"
                                    >
                                      17
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="18"
                                    >
                                      18
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="19"
                                    >
                                      19
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="20"
                                    >
                                      20
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="21"
                                    >
                                      21
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="22"
                                    >
                                      22
                                    </td>
                                  </tr>
                                  <tr>
                                    <td
                                      class="rdtDay"
                                      data-value="23"
                                    >
                                      23
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="24"
                                    >
                                      24
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="25"
                                    >
                                      25
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="26"
                                    >
                                      26
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="27"
                                    >
                                      27
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="28"
                                    >
                                      28
                                    </td>
                                    <td
                                      class="rdtDay"
                                      data-value="29"
                                    >
                                      29
                                    </td>
                                  </tr>
                                  <tr>
                                    <td
                                      class="rdtDay rdtNew"
                                      data-value="1"
                                    >
                                      1
                                    </td>
                                    <td
                                      class="rdtDay rdtNew"
                                      data-value="2"
                                    >
                                      2
                                    </td>
                                    <td
                                      class="rdtDay rdtNew"
                                      data-value="3"
                                    >
                                      3
                                    </td>
                                    <td
                                      class="rdtDay rdtNew"
                                      data-value="4"
                                    >
                                      4
                                    </td>
                                    <td
                                      class="rdtDay rdtNew"
                                      data-value="5"
                                    >
                                      5
                                    </td>
                                    <td
                                      class="rdtDay rdtNew"
                                      data-value="6"
                                    >
                                      6
                                    </td>
                                    <td
                                      class="rdtDay rdtNew"
                                      data-value="7"
                                    >
                                      7
                                    </td>
                                  </tr>
                                </tbody>
                              </table>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div
                        class="input-Input-69"
                      >
                        <label
                          class="input-Label-70"
                        >
                          Sprint Participants
                          *
                        </label>
                        <input
                          class="input-InputElement-71"
                          value="Mike, Bobby"
                        />
                      </div>
                      <div
                        class="input-Input-69"
                      >
                        <label
                          class="input-Label-70"
                        >
                          Sprint Owner
                          *
                        </label>
                        <input
                          class="input-InputElement-71"
                          value="Mike"
                        />
                      </div>
                      <div>
                        <button
                          class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedSecondary"
                          tabindex="0"
                          type="button"
                        >
                          <span
                            class="MuiButton-label"
                          >
                            <span
                              class="MuiButton-startIcon MuiButton-iconSizeMedium"
                            >
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root"
                                focusable="false"
                                role="presentation"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
                                />
                              </svg>
                            </span>
                            CANCEL
                          </span>
                          <span
                            class="MuiTouchRipple-root"
                          />
                        </button>
                        <button
                          class="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedSecondary"
                          tabindex="0"
                          type="button"
                        >
                          <span
                            class="MuiButton-label"
                          >
                            <span
                              class="MuiButton-startIcon MuiButton-iconSizeMedium"
                            >
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root"
                                focusable="false"
                                role="presentation"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                                />
                              </svg>
                            </span>
                            DELETE SPRINT
                          </span>
                          <span
                            class="MuiTouchRipple-root"
                          />
                        </button>
                        <button
                          class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary Mui-disabled Mui-disabled"
                          disabled=""
                          tabindex="-1"
                          type="submit"
                        >
                          <span
                            class="MuiButton-label"
                          >
                            <span
                              class="MuiButton-startIcon MuiButton-iconSizeMedium"
                            >
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root"
                                focusable="false"
                                role="presentation"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"
                                />
                              </svg>
                            </span>
                            SAVE
                          </span>
                        </button>
                      </div>
                    </form>
                  </div>
                </div>
              </div>
              <div
                data-test="sentinelEnd"
                tabindex="0"
              />
            </div>
          </body>
        }
      >
        <div
          aria-describedby="simple-modal-description"
          aria-labelledby="simple-modal-title"
          onKeyDown={[Function]}
          role="presentation"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "fixed",
              "right": 0,
              "top": 0,
              "zIndex": 1300,
            }
          }
        >
          <ForwardRef(SimpleBackdrop)
            onClick={[Function]}
            open={true}
          >
            <div
              aria-hidden={true}
              onClick={[Function]}
              style={
                Object {
                  "WebkitTapHighlightColor": "transparent",
                  "backgroundColor": "rgba(0, 0, 0, 0.5)",
                  "bottom": 0,
                  "left": 0,
                  "position": "fixed",
                  "right": 0,
                  "top": 0,
                  "zIndex": -1,
                }
              }
            />
          </ForwardRef(SimpleBackdrop)>
          <TrapFocus
            disableAutoFocus={false}
            disableEnforceFocus={false}
            disableRestoreFocus={false}
            getDoc={[Function]}
            isEnabled={[Function]}
            open={true}
          >
            <div
              data-test="sentinelStart"
              tabIndex={0}
            />
            <WithStyles(ForwardRef(Paper))
              tabIndex="-1"
            >
              <ForwardRef(Paper)
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "outlined": "MuiPaper-outlined",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                tabIndex="-1"
              >
                <div
                  className="MuiPaper-root MuiPaper-elevation1 MuiPaper-rounded"
                  tabIndex="-1"
                >
                  <div>
                    <WithStyles(cancelButton)
                      clicked={[MockFunction]}
                    >
                      <cancelButton
                        classes={
                          Object {
                            "cancelButtonContainer": "cancelButton-cancelButtonContainer-29",
                          }
                        }
                        clicked={[MockFunction]}
                      >
                        <div
                          className="cancelButton-cancelButtonContainer-29"
                          onClick={[MockFunction]}
                        >
                          <ForwardRef
                            fontSize="large"
                          >
                            <WithStyles(ForwardRef(SvgIcon))
                              fontSize="large"
                            >
                              <ForwardRef(SvgIcon)
                                classes={
                                  Object {
                                    "colorAction": "MuiSvgIcon-colorAction",
                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                    "colorError": "MuiSvgIcon-colorError",
                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                    "root": "MuiSvgIcon-root",
                                  }
                                }
                                fontSize="large"
                              >
                                <svg
                                  aria-hidden="true"
                                  className="MuiSvgIcon-root MuiSvgIcon-fontSizeLarge"
                                  focusable="false"
                                  role="presentation"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm3.59-13L12 10.59 8.41 7 7 8.41 10.59 12 7 15.59 8.41 17 12 13.41 15.59 17 17 15.59 13.41 12 17 8.41z"
                                  />
                                </svg>
                              </ForwardRef(SvgIcon)>
                            </WithStyles(ForwardRef(SvgIcon))>
                          </ForwardRef>
                        </div>
                      </cancelButton>
                    </WithStyles(cancelButton)>
                  </div>
                  <div>
                    <div>
                      <WithStyles(ForwardRef(Typography))
                        variant="h4"
                      >
                        <ForwardRef(Typography)
                          classes={
                            Object {
                              "alignCenter": "MuiTypography-alignCenter",
                              "alignJustify": "MuiTypography-alignJustify",
                              "alignLeft": "MuiTypography-alignLeft",
                              "alignRight": "MuiTypography-alignRight",
                              "body1": "MuiTypography-body1",
                              "body2": "MuiTypography-body2",
                              "button": "MuiTypography-button",
                              "caption": "MuiTypography-caption",
                              "colorError": "MuiTypography-colorError",
                              "colorInherit": "MuiTypography-colorInherit",
                              "colorPrimary": "MuiTypography-colorPrimary",
                              "colorSecondary": "MuiTypography-colorSecondary",
                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                              "displayBlock": "MuiTypography-displayBlock",
                              "displayInline": "MuiTypography-displayInline",
                              "gutterBottom": "MuiTypography-gutterBottom",
                              "h1": "MuiTypography-h1",
                              "h2": "MuiTypography-h2",
                              "h3": "MuiTypography-h3",
                              "h4": "MuiTypography-h4",
                              "h5": "MuiTypography-h5",
                              "h6": "MuiTypography-h6",
                              "noWrap": "MuiTypography-noWrap",
                              "overline": "MuiTypography-overline",
                              "paragraph": "MuiTypography-paragraph",
                              "root": "MuiTypography-root",
                              "srOnly": "MuiTypography-srOnly",
                              "subtitle1": "MuiTypography-subtitle1",
                              "subtitle2": "MuiTypography-subtitle2",
                            }
                          }
                          variant="h4"
                        >
                          <h4
                            className="MuiTypography-root MuiTypography-h4"
                          >
                            Edit
                             Sprint
                          </h4>
                        </ForwardRef(Typography)>
                      </WithStyles(ForwardRef(Typography))>
                    </div>
                    <div>
                      Edit
                       the sprint information and click "Save" below. * = required field
                    </div>
                    <div>
                      <form
                        onSubmit={[Function]}
                      >
                        <WithStyles(input)
                          changed={[Function]}
                          dateChanged={[Function]}
                          elementConfig={
                            Object {
                              "displayName": "Sprint ID",
                              "type": "text",
                            }
                          }
                          elementType="readonly"
                          key="id"
                          required={true}
                          shouldValidate={
                            Object {
                              "required": true,
                            }
                          }
                          touched={false}
                          valid={true}
                          value="test_sprintId"
                        >
                          <input
                            changed={[Function]}
                            classes={
                              Object {
                                "Input": "input-Input-69",
                                "InputElement": "input-InputElement-71",
                                "Invalid": "input-Invalid-72",
                                "Label": "input-Label-70",
                              }
                            }
                            dateChanged={[Function]}
                            elementConfig={
                              Object {
                                "displayName": "Sprint ID",
                                "type": "text",
                              }
                            }
                            elementType="readonly"
                            required={true}
                            shouldValidate={
                              Object {
                                "required": true,
                              }
                            }
                            touched={false}
                            valid={true}
                            value="test_sprintId"
                          >
                            <div
                              className="input-Input-69"
                            >
                              <label
                                className="input-Label-70"
                              >
                                Sprint ID
                                *
                              </label>
                              <div>
                                test_sprintId
                              </div>
                            </div>
                          </input>
                        </WithStyles(input)>
                        <WithStyles(input)
                          changed={[Function]}
                          dateChanged={[Function]}
                          elementConfig={
                            Object {
                              "displayName": "Sprint Name (e.g., Sprint #4)",
                              "type": "text",
                            }
                          }
                          elementType="input"
                          key="name"
                          required={true}
                          shouldValidate={
                            Object {
                              "required": true,
                            }
                          }
                          touched={false}
                          valid={true}
                          value="Sprint #1"
                        >
                          <input
                            changed={[Function]}
                            classes={
                              Object {
                                "Input": "input-Input-69",
                                "InputElement": "input-InputElement-71",
                                "Invalid": "input-Invalid-72",
                                "Label": "input-Label-70",
                              }
                            }
                            dateChanged={[Function]}
                            elementConfig={
                              Object {
                                "displayName": "Sprint Name (e.g., Sprint #4)",
                                "type": "text",
                              }
                            }
                            elementType="input"
                            required={true}
                            shouldValidate={
                              Object {
                                "required": true,
                              }
                            }
                            touched={false}
                            valid={true}
                            value="Sprint #1"
                          >
                            <div
                              className="input-Input-69"
                            >
                              <label
                                className="input-Label-70"
                              >
                                Sprint Name (e.g., Sprint #4)
                                *
                              </label>
                              <input
                                className="input-InputElement-71"
                                onChange={[Function]}
                                value="Sprint #1"
                              />
                            </div>
                          </input>
                        </WithStyles(input)>
                        <WithStyles(input)
                          changed={[Function]}
                          dateChanged={[Function]}
                          elementConfig={
                            Object {
                              "displayName": "Start Date",
                              "type": "text",
                            }
                          }
                          elementType="date"
                          key="startDate"
                          required={true}
                          shouldValidate={
                            Object {
                              "required": true,
                            }
                          }
                          touched={false}
                          valid={true}
                          value="Fri Jan 24 2020 00:00:00 GMT+0000"
                        >
                          <input
                            changed={[Function]}
                            classes={
                              Object {
                                "Input": "input-Input-69",
                                "InputElement": "input-InputElement-71",
                                "Invalid": "input-Invalid-72",
                                "Label": "input-Label-70",
                              }
                            }
                            dateChanged={[Function]}
                            elementConfig={
                              Object {
                                "displayName": "Start Date",
                                "type": "text",
                              }
                            }
                            elementType="date"
                            required={true}
                            shouldValidate={
                              Object {
                                "required": true,
                              }
                            }
                            touched={false}
                            valid={true}
                            value="Fri Jan 24 2020 00:00:00 GMT+0000"
                          >
                            <div
                              className="input-Input-69"
                            >
                              <label
                                className="input-Label-70"
                              >
                                Start Date
                                *
                              </label>
                              <DateTime
                                className=""
                                closeOnSelect={true}
                                closeOnTab={true}
                                dateFormat={true}
                                defaultValue=""
                                input={true}
                                inputProps={
                                  Object {
                                    "className": "customInput",
                                    "readOnly": true,
                                  }
                                }
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onNavigateBack={[Function]}
                                onNavigateForward={[Function]}
                                onViewModeChange={[Function]}
                                strictParsing={true}
                                timeConstraints={Object {}}
                                timeFormat={false}
                                utc={true}
                                value="Fri. Jan. 24, 2020"
                                viewDate={"2020-01-24T00:00:00.000Z"}
                              >
                                <OnClickOutside(Component)
                                  className="rdt"
                                  eventTypes={
                                    Array [
                                      "mousedown",
                                      "touchstart",
                                    ]
                                  }
                                  excludeScrollbar={false}
                                  onClickOut={[Function]}
                                  outsideClickIgnoreClass="ignore-react-onclickoutside"
                                  preventDefault={false}
                                  stopPropagation={false}
                                >
                                  <Component
                                    className="rdt"
                                    disableOnClickOutside={[Function]}
                                    enableOnClickOutside={[Function]}
                                    eventTypes={
                                      Array [
                                        "mousedown",
                                        "touchstart",
                                      ]
                                    }
                                    onClickOut={[Function]}
                                    outsideClickIgnoreClass="ignore-react-onclickoutside"
                                    preventDefault={false}
                                    stopPropagation={false}
                                  >
                                    <div
                                      className="rdt"
                                    >
                                      <input
                                        className="customInput"
                                        key="i"
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        readOnly={true}
                                        type="text"
                                        value="Fri. Jan. 24, 2020"
                                      />
                                      <div
                                        className="rdtPicker"
                                        key="dt"
                                      >
                                        <Component
                                          view="days"
                                          viewProps={
                                            Object {
                                              "addTime": [Function],
                                              "dateFormat": "MM/DD/YYYY",
                                              "handleClickOutside": [Function],
                                              "isValidDate": undefined,
                                              "localMoment": [Function],
                                              "renderDay": undefined,
                                              "renderMonth": undefined,
                                              "renderYear": undefined,
                                              "selectedDate": null,
                                              "setDate": [Function],
                                              "setTime": [Function],
                                              "showView": [Function],
                                              "subtractTime": [Function],
                                              "timeConstraints": Object {},
                                              "timeFormat": "",
                                              "updateOn": "days",
                                              "updateSelectedDate": [Function],
                                              "value": "Fri. Jan. 24, 2020",
                                              "viewDate": "2020-01-01T00:00:00.000Z",
                                            }
                                          }
                                        >
                                          <Component
                                            addTime={[Function]}
                                            dateFormat="MM/DD/YYYY"
                                            handleClickOutside={[Function]}
                                            localMoment={[Function]}
                                            selectedDate={null}
                                            setDate={[Function]}
                                            setTime={[Function]}
                                            showView={[Function]}
                                            subtractTime={[Function]}
                                            timeConstraints={Object {}}
                                            timeFormat=""
                                            updateOn="days"
                                            updateSelectedDate={[Function]}
                                            value="Fri. Jan. 24, 2020"
                                            viewDate={"2020-01-01T00:00:00.000Z"}
                                          >
                                            <div
                                              className="rdtDays"
                                            >
                                              <table>
                                                <thead
                                                  key="th"
                                                >
                                                  <tr
                                                    key="h"
                                                  >
                                                    <th
                                                      className="rdtPrev"
                                                      key="p"
                                                      onClick={[Function]}
                                                    >
                                                      <span>
                                                        ‹
                                                      </span>
                                                    </th>
                                                    <th
                                                      className="rdtSwitch"
                                                      colSpan={5}
                                                      data-value={0}
                                                      key="s"
                                                      onClick={[Function]}
                                                    >
                                                      January 2020
                                                    </th>
                                                    <th
                                                      className="rdtNext"
                                                      key="n"
                                                      onClick={[Function]}
                                                    >
                                                      <span>
                                                        ›
                                                      </span>
                                                    </th>
                                                  </tr>
                                                  <tr
                                                    key="d"
                                                  >
                                                    <th
                                                      className="dow"
                                                      key="Su0"
                                                    >
                                                      Su
                                                    </th>
                                                    <th
                                                      className="dow"
                                                      key="Mo1"
                                                    >
                                                      Mo
                                                    </th>
                                                    <th
                                                      className="dow"
                                                      key="Tu2"
                                                    >
                                                      Tu
                                                    </th>
                                                    <th
                                                      className="dow"
                                                      key="We3"
                                                    >
                                                      We
                                                    </th>
                                                    <th
                                                      className="dow"
                                                      key="Th4"
                                                    >
                                                      Th
                                                    </th>
                                                    <th
                                                      className="dow"
                                                      key="Fr5"
                                                    >
                                                      Fr
                                                    </th>
                                                    <th
                                                      className="dow"
                                                      key="Sa6"
                                                    >
                                                      Sa
                                                    </th>
                                                  </tr>
                                                </thead>
                                                <tbody
                                                  key="tb"
                                                >
                                                  <tr
                                                    key="1_4"
                                                  >
                                                    <td
                                                      className="rdtDay rdtOld"
                                                      data-value={29}
                                                      key="12_29"
                                                      onClick={[Function]}
                                                    >
                                                      29
                                                    </td>
                                                    <td
                                                      className="rdtDay rdtOld"
                                                      data-value={30}
                                                      key="12_30"
                                                      onClick={[Function]}
                                                    >
                                                      30
                                                    </td>
                                                    <td
                                                      className="rdtDay rdtOld"
                                                      data-value={31}
                                                      key="12_31"
                                                      onClick={[Function]}
                                                    >
                                                      31
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={1}
                                                      key="1_1"
                                                      onClick={[Function]}
                                                    >
                                                      1
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={2}
                                                      key="1_2"
                                                      onClick={[Function]}
                                                    >
                                                      2
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={3}
                                                      key="1_3"
                                                      onClick={[Function]}
                                                    >
                                                      3
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={4}
                                                      key="1_4"
                                                      onClick={[Function]}
                                                    >
                                                      4
                                                    </td>
                                                  </tr>
                                                  <tr
                                                    key="1_11"
                                                  >
                                                    <td
                                                      className="rdtDay"
                                                      data-value={5}
                                                      key="1_5"
                                                      onClick={[Function]}
                                                    >
                                                      5
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={6}
                                                      key="1_6"
                                                      onClick={[Function]}
                                                    >
                                                      6
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={7}
                                                      key="1_7"
                                                      onClick={[Function]}
                                                    >
                                                      7
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={8}
                                                      key="1_8"
                                                      onClick={[Function]}
                                                    >
                                                      8
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={9}
                                                      key="1_9"
                                                      onClick={[Function]}
                                                    >
                                                      9
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={10}
                                                      key="1_10"
                                                      onClick={[Function]}
                                                    >
                                                      10
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={11}
                                                      key="1_11"
                                                      onClick={[Function]}
                                                    >
                                                      11
                                                    </td>
                                                  </tr>
                                                  <tr
                                                    key="1_18"
                                                  >
                                                    <td
                                                      className="rdtDay"
                                                      data-value={12}
                                                      key="1_12"
                                                      onClick={[Function]}
                                                    >
                                                      12
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={13}
                                                      key="1_13"
                                                      onClick={[Function]}
                                                    >
                                                      13
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={14}
                                                      key="1_14"
                                                      onClick={[Function]}
                                                    >
                                                      14
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={15}
                                                      key="1_15"
                                                      onClick={[Function]}
                                                    >
                                                      15
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={16}
                                                      key="1_16"
                                                      onClick={[Function]}
                                                    >
                                                      16
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={17}
                                                      key="1_17"
                                                      onClick={[Function]}
                                                    >
                                                      17
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={18}
                                                      key="1_18"
                                                      onClick={[Function]}
                                                    >
                                                      18
                                                    </td>
                                                  </tr>
                                                  <tr
                                                    key="1_25"
                                                  >
                                                    <td
                                                      className="rdtDay"
                                                      data-value={19}
                                                      key="1_19"
                                                      onClick={[Function]}
                                                    >
                                                      19
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={20}
                                                      key="1_20"
                                                      onClick={[Function]}
                                                    >
                                                      20
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={21}
                                                      key="1_21"
                                                      onClick={[Function]}
                                                    >
                                                      21
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={22}
                                                      key="1_22"
                                                      onClick={[Function]}
                                                    >
                                                      22
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={23}
                                                      key="1_23"
                                                      onClick={[Function]}
                                                    >
                                                      23
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={24}
                                                      key="1_24"
                                                      onClick={[Function]}
                                                    >
                                                      24
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={25}
                                                      key="1_25"
                                                      onClick={[Function]}
                                                    >
                                                      25
                                                    </td>
                                                  </tr>
                                                  <tr
                                                    key="2_1"
                                                  >
                                                    <td
                                                      className="rdtDay"
                                                      data-value={26}
                                                      key="1_26"
                                                      onClick={[Function]}
                                                    >
                                                      26
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={27}
                                                      key="1_27"
                                                      onClick={[Function]}
                                                    >
                                                      27
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={28}
                                                      key="1_28"
                                                      onClick={[Function]}
                                                    >
                                                      28
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={29}
                                                      key="1_29"
                                                      onClick={[Function]}
                                                    >
                                                      29
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={30}
                                                      key="1_30"
                                                      onClick={[Function]}
                                                    >
                                                      30
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={31}
                                                      key="1_31"
                                                      onClick={[Function]}
                                                    >
                                                      31
                                                    </td>
                                                    <td
                                                      className="rdtDay rdtNew"
                                                      data-value={1}
                                                      key="2_1"
                                                      onClick={[Function]}
                                                    >
                                                      1
                                                    </td>
                                                  </tr>
                                                  <tr
                                                    key="2_8"
                                                  >
                                                    <td
                                                      className="rdtDay rdtNew"
                                                      data-value={2}
                                                      key="2_2"
                                                      onClick={[Function]}
                                                    >
                                                      2
                                                    </td>
                                                    <td
                                                      className="rdtDay rdtNew"
                                                      data-value={3}
                                                      key="2_3"
                                                      onClick={[Function]}
                                                    >
                                                      3
                                                    </td>
                                                    <td
                                                      className="rdtDay rdtNew"
                                                      data-value={4}
                                                      key="2_4"
                                                      onClick={[Function]}
                                                    >
                                                      4
                                                    </td>
                                                    <td
                                                      className="rdtDay rdtNew"
                                                      data-value={5}
                                                      key="2_5"
                                                      onClick={[Function]}
                                                    >
                                                      5
                                                    </td>
                                                    <td
                                                      className="rdtDay rdtNew"
                                                      data-value={6}
                                                      key="2_6"
                                                      onClick={[Function]}
                                                    >
                                                      6
                                                    </td>
                                                    <td
                                                      className="rdtDay rdtNew"
                                                      data-value={7}
                                                      key="2_7"
                                                      onClick={[Function]}
                                                    >
                                                      7
                                                    </td>
                                                    <td
                                                      className="rdtDay rdtNew"
                                                      data-value={8}
                                                      key="2_8"
                                                      onClick={[Function]}
                                                    >
                                                      8
                                                    </td>
                                                  </tr>
                                                </tbody>
                                              </table>
                                            </div>
                                          </Component>
                                        </Component>
                                      </div>
                                    </div>
                                  </Component>
                                </OnClickOutside(Component)>
                              </DateTime>
                            </div>
                          </input>
                        </WithStyles(input)>
                        <WithStyles(input)
                          changed={[Function]}
                          dateChanged={[Function]}
                          elementConfig={
                            Object {
                              "displayName": "End Date",
                              "type": "text",
                            }
                          }
                          elementType="date"
                          key="endDate"
                          required={true}
                          shouldValidate={
                            Object {
                              "required": true,
                            }
                          }
                          touched={false}
                          valid={true}
                          value="Thu Feb 06 2020 00:00:00 GMT+0000"
                        >
                          <input
                            changed={[Function]}
                            classes={
                              Object {
                                "Input": "input-Input-69",
                                "InputElement": "input-InputElement-71",
                                "Invalid": "input-Invalid-72",
                                "Label": "input-Label-70",
                              }
                            }
                            dateChanged={[Function]}
                            elementConfig={
                              Object {
                                "displayName": "End Date",
                                "type": "text",
                              }
                            }
                            elementType="date"
                            required={true}
                            shouldValidate={
                              Object {
                                "required": true,
                              }
                            }
                            touched={false}
                            valid={true}
                            value="Thu Feb 06 2020 00:00:00 GMT+0000"
                          >
                            <div
                              className="input-Input-69"
                            >
                              <label
                                className="input-Label-70"
                              >
                                End Date
                                *
                              </label>
                              <DateTime
                                className=""
                                closeOnSelect={true}
                                closeOnTab={true}
                                dateFormat={true}
                                defaultValue=""
                                input={true}
                                inputProps={
                                  Object {
                                    "className": "customInput",
                                    "readOnly": true,
                                  }
                                }
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onNavigateBack={[Function]}
                                onNavigateForward={[Function]}
                                onViewModeChange={[Function]}
                                strictParsing={true}
                                timeConstraints={Object {}}
                                timeFormat={false}
                                utc={true}
                                value="Thu. Feb. 6, 2020"
                                viewDate={"2020-02-06T00:00:00.000Z"}
                              >
                                <OnClickOutside(Component)
                                  className="rdt"
                                  eventTypes={
                                    Array [
                                      "mousedown",
                                      "touchstart",
                                    ]
                                  }
                                  excludeScrollbar={false}
                                  onClickOut={[Function]}
                                  outsideClickIgnoreClass="ignore-react-onclickoutside"
                                  preventDefault={false}
                                  stopPropagation={false}
                                >
                                  <Component
                                    className="rdt"
                                    disableOnClickOutside={[Function]}
                                    enableOnClickOutside={[Function]}
                                    eventTypes={
                                      Array [
                                        "mousedown",
                                        "touchstart",
                                      ]
                                    }
                                    onClickOut={[Function]}
                                    outsideClickIgnoreClass="ignore-react-onclickoutside"
                                    preventDefault={false}
                                    stopPropagation={false}
                                  >
                                    <div
                                      className="rdt"
                                    >
                                      <input
                                        className="customInput"
                                        key="i"
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        readOnly={true}
                                        type="text"
                                        value="Thu. Feb. 6, 2020"
                                      />
                                      <div
                                        className="rdtPicker"
                                        key="dt"
                                      >
                                        <Component
                                          view="days"
                                          viewProps={
                                            Object {
                                              "addTime": [Function],
                                              "dateFormat": "MM/DD/YYYY",
                                              "handleClickOutside": [Function],
                                              "isValidDate": undefined,
                                              "localMoment": [Function],
                                              "renderDay": undefined,
                                              "renderMonth": undefined,
                                              "renderYear": undefined,
                                              "selectedDate": null,
                                              "setDate": [Function],
                                              "setTime": [Function],
                                              "showView": [Function],
                                              "subtractTime": [Function],
                                              "timeConstraints": Object {},
                                              "timeFormat": "",
                                              "updateOn": "days",
                                              "updateSelectedDate": [Function],
                                              "value": "Thu. Feb. 6, 2020",
                                              "viewDate": "2020-02-01T00:00:00.000Z",
                                            }
                                          }
                                        >
                                          <Component
                                            addTime={[Function]}
                                            dateFormat="MM/DD/YYYY"
                                            handleClickOutside={[Function]}
                                            localMoment={[Function]}
                                            selectedDate={null}
                                            setDate={[Function]}
                                            setTime={[Function]}
                                            showView={[Function]}
                                            subtractTime={[Function]}
                                            timeConstraints={Object {}}
                                            timeFormat=""
                                            updateOn="days"
                                            updateSelectedDate={[Function]}
                                            value="Thu. Feb. 6, 2020"
                                            viewDate={"2020-02-01T00:00:00.000Z"}
                                          >
                                            <div
                                              className="rdtDays"
                                            >
                                              <table>
                                                <thead
                                                  key="th"
                                                >
                                                  <tr
                                                    key="h"
                                                  >
                                                    <th
                                                      className="rdtPrev"
                                                      key="p"
                                                      onClick={[Function]}
                                                    >
                                                      <span>
                                                        ‹
                                                      </span>
                                                    </th>
                                                    <th
                                                      className="rdtSwitch"
                                                      colSpan={5}
                                                      data-value={1}
                                                      key="s"
                                                      onClick={[Function]}
                                                    >
                                                      February 2020
                                                    </th>
                                                    <th
                                                      className="rdtNext"
                                                      key="n"
                                                      onClick={[Function]}
                                                    >
                                                      <span>
                                                        ›
                                                      </span>
                                                    </th>
                                                  </tr>
                                                  <tr
                                                    key="d"
                                                  >
                                                    <th
                                                      className="dow"
                                                      key="Su0"
                                                    >
                                                      Su
                                                    </th>
                                                    <th
                                                      className="dow"
                                                      key="Mo1"
                                                    >
                                                      Mo
                                                    </th>
                                                    <th
                                                      className="dow"
                                                      key="Tu2"
                                                    >
                                                      Tu
                                                    </th>
                                                    <th
                                                      className="dow"
                                                      key="We3"
                                                    >
                                                      We
                                                    </th>
                                                    <th
                                                      className="dow"
                                                      key="Th4"
                                                    >
                                                      Th
                                                    </th>
                                                    <th
                                                      className="dow"
                                                      key="Fr5"
                                                    >
                                                      Fr
                                                    </th>
                                                    <th
                                                      className="dow"
                                                      key="Sa6"
                                                    >
                                                      Sa
                                                    </th>
                                                  </tr>
                                                </thead>
                                                <tbody
                                                  key="tb"
                                                >
                                                  <tr
                                                    key="2_1"
                                                  >
                                                    <td
                                                      className="rdtDay rdtOld"
                                                      data-value={26}
                                                      key="1_26"
                                                      onClick={[Function]}
                                                    >
                                                      26
                                                    </td>
                                                    <td
                                                      className="rdtDay rdtOld"
                                                      data-value={27}
                                                      key="1_27"
                                                      onClick={[Function]}
                                                    >
                                                      27
                                                    </td>
                                                    <td
                                                      className="rdtDay rdtOld"
                                                      data-value={28}
                                                      key="1_28"
                                                      onClick={[Function]}
                                                    >
                                                      28
                                                    </td>
                                                    <td
                                                      className="rdtDay rdtOld"
                                                      data-value={29}
                                                      key="1_29"
                                                      onClick={[Function]}
                                                    >
                                                      29
                                                    </td>
                                                    <td
                                                      className="rdtDay rdtOld"
                                                      data-value={30}
                                                      key="1_30"
                                                      onClick={[Function]}
                                                    >
                                                      30
                                                    </td>
                                                    <td
                                                      className="rdtDay rdtOld"
                                                      data-value={31}
                                                      key="1_31"
                                                      onClick={[Function]}
                                                    >
                                                      31
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={1}
                                                      key="2_1"
                                                      onClick={[Function]}
                                                    >
                                                      1
                                                    </td>
                                                  </tr>
                                                  <tr
                                                    key="2_8"
                                                  >
                                                    <td
                                                      className="rdtDay"
                                                      data-value={2}
                                                      key="2_2"
                                                      onClick={[Function]}
                                                    >
                                                      2
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={3}
                                                      key="2_3"
                                                      onClick={[Function]}
                                                    >
                                                      3
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={4}
                                                      key="2_4"
                                                      onClick={[Function]}
                                                    >
                                                      4
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={5}
                                                      key="2_5"
                                                      onClick={[Function]}
                                                    >
                                                      5
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={6}
                                                      key="2_6"
                                                      onClick={[Function]}
                                                    >
                                                      6
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={7}
                                                      key="2_7"
                                                      onClick={[Function]}
                                                    >
                                                      7
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={8}
                                                      key="2_8"
                                                      onClick={[Function]}
                                                    >
                                                      8
                                                    </td>
                                                  </tr>
                                                  <tr
                                                    key="2_15"
                                                  >
                                                    <td
                                                      className="rdtDay"
                                                      data-value={9}
                                                      key="2_9"
                                                      onClick={[Function]}
                                                    >
                                                      9
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={10}
                                                      key="2_10"
                                                      onClick={[Function]}
                                                    >
                                                      10
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={11}
                                                      key="2_11"
                                                      onClick={[Function]}
                                                    >
                                                      11
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={12}
                                                      key="2_12"
                                                      onClick={[Function]}
                                                    >
                                                      12
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={13}
                                                      key="2_13"
                                                      onClick={[Function]}
                                                    >
                                                      13
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={14}
                                                      key="2_14"
                                                      onClick={[Function]}
                                                    >
                                                      14
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={15}
                                                      key="2_15"
                                                      onClick={[Function]}
                                                    >
                                                      15
                                                    </td>
                                                  </tr>
                                                  <tr
                                                    key="2_22"
                                                  >
                                                    <td
                                                      className="rdtDay"
                                                      data-value={16}
                                                      key="2_16"
                                                      onClick={[Function]}
                                                    >
                                                      16
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={17}
                                                      key="2_17"
                                                      onClick={[Function]}
                                                    >
                                                      17
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={18}
                                                      key="2_18"
                                                      onClick={[Function]}
                                                    >
                                                      18
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={19}
                                                      key="2_19"
                                                      onClick={[Function]}
                                                    >
                                                      19
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={20}
                                                      key="2_20"
                                                      onClick={[Function]}
                                                    >
                                                      20
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={21}
                                                      key="2_21"
                                                      onClick={[Function]}
                                                    >
                                                      21
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={22}
                                                      key="2_22"
                                                      onClick={[Function]}
                                                    >
                                                      22
                                                    </td>
                                                  </tr>
                                                  <tr
                                                    key="2_29"
                                                  >
                                                    <td
                                                      className="rdtDay"
                                                      data-value={23}
                                                      key="2_23"
                                                      onClick={[Function]}
                                                    >
                                                      23
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={24}
                                                      key="2_24"
                                                      onClick={[Function]}
                                                    >
                                                      24
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={25}
                                                      key="2_25"
                                                      onClick={[Function]}
                                                    >
                                                      25
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={26}
                                                      key="2_26"
                                                      onClick={[Function]}
                                                    >
                                                      26
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={27}
                                                      key="2_27"
                                                      onClick={[Function]}
                                                    >
                                                      27
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={28}
                                                      key="2_28"
                                                      onClick={[Function]}
                                                    >
                                                      28
                                                    </td>
                                                    <td
                                                      className="rdtDay"
                                                      data-value={29}
                                                      key="2_29"
                                                      onClick={[Function]}
                                                    >
                                                      29
                                                    </td>
                                                  </tr>
                                                  <tr
                                                    key="3_7"
                                                  >
                                                    <td
                                                      className="rdtDay rdtNew"
                                                      data-value={1}
                                                      key="3_1"
                                                      onClick={[Function]}
                                                    >
                                                      1
                                                    </td>
                                                    <td
                                                      className="rdtDay rdtNew"
                                                      data-value={2}
                                                      key="3_2"
                                                      onClick={[Function]}
                                                    >
                                                      2
                                                    </td>
                                                    <td
                                                      className="rdtDay rdtNew"
                                                      data-value={3}
                                                      key="3_3"
                                                      onClick={[Function]}
                                                    >
                                                      3
                                                    </td>
                                                    <td
                                                      className="rdtDay rdtNew"
                                                      data-value={4}
                                                      key="3_4"
                                                      onClick={[Function]}
                                                    >
                                                      4
                                                    </td>
                                                    <td
                                                      className="rdtDay rdtNew"
                                                      data-value={5}
                                                      key="3_5"
                                                      onClick={[Function]}
                                                    >
                                                      5
                                                    </td>
                                                    <td
                                                      className="rdtDay rdtNew"
                                                      data-value={6}
                                                      key="3_6"
                                                      onClick={[Function]}
                                                    >
                                                      6
                                                    </td>
                                                    <td
                                                      className="rdtDay rdtNew"
                                                      data-value={7}
                                                      key="3_7"
                                                      onClick={[Function]}
                                                    >
                                                      7
                                                    </td>
                                                  </tr>
                                                </tbody>
                                              </table>
                                            </div>
                                          </Component>
                                        </Component>
                                      </div>
                                    </div>
                                  </Component>
                                </OnClickOutside(Component)>
                              </DateTime>
                            </div>
                          </input>
                        </WithStyles(input)>
                        <WithStyles(input)
                          changed={[Function]}
                          dateChanged={[Function]}
                          elementConfig={
                            Object {
                              "displayName": "Sprint Participants",
                              "type": "text",
                            }
                          }
                          elementType="input"
                          key="participants"
                          required={true}
                          shouldValidate={
                            Object {
                              "required": true,
                            }
                          }
                          touched={false}
                          valid={true}
                          value="Mike, Bobby"
                        >
                          <input
                            changed={[Function]}
                            classes={
                              Object {
                                "Input": "input-Input-69",
                                "InputElement": "input-InputElement-71",
                                "Invalid": "input-Invalid-72",
                                "Label": "input-Label-70",
                              }
                            }
                            dateChanged={[Function]}
                            elementConfig={
                              Object {
                                "displayName": "Sprint Participants",
                                "type": "text",
                              }
                            }
                            elementType="input"
                            required={true}
                            shouldValidate={
                              Object {
                                "required": true,
                              }
                            }
                            touched={false}
                            valid={true}
                            value="Mike, Bobby"
                          >
                            <div
                              className="input-Input-69"
                            >
                              <label
                                className="input-Label-70"
                              >
                                Sprint Participants
                                *
                              </label>
                              <input
                                className="input-InputElement-71"
                                onChange={[Function]}
                                value="Mike, Bobby"
                              />
                            </div>
                          </input>
                        </WithStyles(input)>
                        <WithStyles(input)
                          changed={[Function]}
                          dateChanged={[Function]}
                          elementConfig={
                            Object {
                              "displayName": "Sprint Owner",
                              "type": "text",
                            }
                          }
                          elementType="input"
                          key="owner"
                          required={true}
                          shouldValidate={
                            Object {
                              "required": true,
                            }
                          }
                          touched={false}
                          valid={true}
                          value="Mike"
                        >
                          <input
                            changed={[Function]}
                            classes={
                              Object {
                                "Input": "input-Input-69",
                                "InputElement": "input-InputElement-71",
                                "Invalid": "input-Invalid-72",
                                "Label": "input-Label-70",
                              }
                            }
                            dateChanged={[Function]}
                            elementConfig={
                              Object {
                                "displayName": "Sprint Owner",
                                "type": "text",
                              }
                            }
                            elementType="input"
                            required={true}
                            shouldValidate={
                              Object {
                                "required": true,
                              }
                            }
                            touched={false}
                            valid={true}
                            value="Mike"
                          >
                            <div
                              className="input-Input-69"
                            >
                              <label
                                className="input-Label-70"
                              >
                                Sprint Owner
                                *
                              </label>
                              <input
                                className="input-InputElement-71"
                                onChange={[Function]}
                                value="Mike"
                              />
                            </div>
                          </input>
                        </WithStyles(input)>
                        <div>
                          <WithStyles(ForwardRef(Button))
                            color="secondary"
                            onClick={[MockFunction]}
                            startIcon={<UNDEFINED />}
                            variant="contained"
                          >
                            <ForwardRef(Button)
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit",
                                  "contained": "MuiButton-contained",
                                  "containedPrimary": "MuiButton-containedPrimary",
                                  "containedSecondary": "MuiButton-containedSecondary",
                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                  "disableElevation": "MuiButton-disableElevation",
                                  "disabled": "Mui-disabled",
                                  "endIcon": "MuiButton-endIcon",
                                  "focusVisible": "Mui-focusVisible",
                                  "fullWidth": "MuiButton-fullWidth",
                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                  "label": "MuiButton-label",
                                  "outlined": "MuiButton-outlined",
                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                  "root": "MuiButton-root",
                                  "sizeLarge": "MuiButton-sizeLarge",
                                  "sizeSmall": "MuiButton-sizeSmall",
                                  "startIcon": "MuiButton-startIcon",
                                  "text": "MuiButton-text",
                                  "textPrimary": "MuiButton-textPrimary",
                                  "textSecondary": "MuiButton-textSecondary",
                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                }
                              }
                              color="secondary"
                              onClick={[MockFunction]}
                              startIcon={<UNDEFINED />}
                              variant="contained"
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiButton-root MuiButton-contained MuiButton-containedSecondary"
                                component="button"
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible"
                                onClick={[MockFunction]}
                                type="button"
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiButton-root MuiButton-contained MuiButton-containedSecondary"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="button"
                                  disabled={false}
                                  focusRipple={true}
                                  focusVisibleClassName="Mui-focusVisible"
                                  onClick={[MockFunction]}
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedSecondary"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[MockFunction]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label"
                                    >
                                      <span
                                        className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                      >
                                        <ForwardRef>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef>
                                      </span>
                                      CANCEL
                                    </span>
                                    <NoSsr>
                                      <WithStyles(undefined)
                                        center={false}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={false}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(undefined)>
                                    </NoSsr>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(Button)>
                          </WithStyles(ForwardRef(Button))>
                          <WithStyles(ForwardRef(Button))
                            color="secondary"
                            onClick={[Function]}
                            startIcon={<UNDEFINED />}
                            variant="outlined"
                          >
                            <ForwardRef(Button)
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit",
                                  "contained": "MuiButton-contained",
                                  "containedPrimary": "MuiButton-containedPrimary",
                                  "containedSecondary": "MuiButton-containedSecondary",
                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                  "disableElevation": "MuiButton-disableElevation",
                                  "disabled": "Mui-disabled",
                                  "endIcon": "MuiButton-endIcon",
                                  "focusVisible": "Mui-focusVisible",
                                  "fullWidth": "MuiButton-fullWidth",
                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                  "label": "MuiButton-label",
                                  "outlined": "MuiButton-outlined",
                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                  "root": "MuiButton-root",
                                  "sizeLarge": "MuiButton-sizeLarge",
                                  "sizeSmall": "MuiButton-sizeSmall",
                                  "startIcon": "MuiButton-startIcon",
                                  "text": "MuiButton-text",
                                  "textPrimary": "MuiButton-textPrimary",
                                  "textSecondary": "MuiButton-textSecondary",
                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                }
                              }
                              color="secondary"
                              onClick={[Function]}
                              startIcon={<UNDEFINED />}
                              variant="outlined"
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiButton-root MuiButton-outlined MuiButton-outlinedSecondary"
                                component="button"
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible"
                                onClick={[Function]}
                                type="button"
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiButton-root MuiButton-outlined MuiButton-outlinedSecondary"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="button"
                                  disabled={false}
                                  focusRipple={true}
                                  focusVisibleClassName="Mui-focusVisible"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedSecondary"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label"
                                    >
                                      <span
                                        className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                      >
                                        <ForwardRef>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef>
                                      </span>
                                      DELETE SPRINT
                                    </span>
                                    <NoSsr>
                                      <WithStyles(undefined)
                                        center={false}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={false}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(undefined)>
                                    </NoSsr>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(Button)>
                          </WithStyles(ForwardRef(Button))>
                          <WithStyles(ForwardRef(Button))
                            color="primary"
                            disabled={true}
                            startIcon={<UNDEFINED />}
                            type="submit"
                            variant="contained"
                          >
                            <ForwardRef(Button)
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit",
                                  "contained": "MuiButton-contained",
                                  "containedPrimary": "MuiButton-containedPrimary",
                                  "containedSecondary": "MuiButton-containedSecondary",
                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                  "disableElevation": "MuiButton-disableElevation",
                                  "disabled": "Mui-disabled",
                                  "endIcon": "MuiButton-endIcon",
                                  "focusVisible": "Mui-focusVisible",
                                  "fullWidth": "MuiButton-fullWidth",
                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                  "label": "MuiButton-label",
                                  "outlined": "MuiButton-outlined",
                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                  "root": "MuiButton-root",
                                  "sizeLarge": "MuiButton-sizeLarge",
                                  "sizeSmall": "MuiButton-sizeSmall",
                                  "startIcon": "MuiButton-startIcon",
                                  "text": "MuiButton-text",
                                  "textPrimary": "MuiButton-textPrimary",
                                  "textSecondary": "MuiButton-textSecondary",
                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                }
                              }
                              color="primary"
                              disabled={true}
                              startIcon={<UNDEFINED />}
                              type="submit"
                              variant="contained"
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary Mui-disabled"
                                component="button"
                                disabled={true}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible"
                                type="submit"
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiButton-root MuiButton-contained MuiButton-containedPrimary Mui-disabled"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="button"
                                  disabled={true}
                                  focusRipple={true}
                                  focusVisibleClassName="Mui-focusVisible"
                                  type="submit"
                                >
                                  <button
                                    className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary Mui-disabled Mui-disabled"
                                    disabled={true}
                                    onBlur={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={-1}
                                    type="submit"
                                  >
                                    <span
                                      className="MuiButton-label"
                                    >
                                      <span
                                        className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                      >
                                        <ForwardRef>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef>
                                      </span>
                                      SAVE
                                    </span>
                                    <NoSsr />
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(Button)>
                          </WithStyles(ForwardRef(Button))>
                        </div>
                      </form>
                    </div>
                  </div>
                  <WithStyles(ForwardRef(Dialog))
                    aria-describedby="alert-dialog-description"
                    aria-labelledby="alert-dialog-title"
                    onClose={[Function]}
                    open={false}
                  >
                    <ForwardRef(Dialog)
                      aria-describedby="alert-dialog-description"
                      aria-labelledby="alert-dialog-title"
                      classes={
                        Object {
                          "container": "MuiDialog-container",
                          "paper": "MuiDialog-paper",
                          "paperFullScreen": "MuiDialog-paperFullScreen",
                          "paperFullWidth": "MuiDialog-paperFullWidth",
                          "paperScrollBody": "MuiDialog-paperScrollBody",
                          "paperScrollPaper": "MuiDialog-paperScrollPaper",
                          "paperWidthFalse": "MuiDialog-paperWidthFalse",
                          "paperWidthLg": "MuiDialog-paperWidthLg",
                          "paperWidthMd": "MuiDialog-paperWidthMd",
                          "paperWidthSm": "MuiDialog-paperWidthSm",
                          "paperWidthXl": "MuiDialog-paperWidthXl",
                          "paperWidthXs": "MuiDialog-paperWidthXs",
                          "root": "MuiDialog-root",
                          "scrollBody": "MuiDialog-scrollBody",
                          "scrollPaper": "MuiDialog-scrollPaper",
                        }
                      }
                      onClose={[Function]}
                      open={false}
                    >
                      <ForwardRef(Modal)
                        BackdropComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "Naked": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "propTypes": Object {
                                "children": [Function],
                                "className": [Function],
                                "classes": [Function],
                                "invisible": [Function],
                                "open": [Function],
                                "transitionDuration": [Function],
                              },
                              "render": [Function],
                            },
                            "defaultProps": undefined,
                            "displayName": "WithStyles(ForwardRef(Backdrop))",
                            "options": Object {
                              "defaultTheme": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "only": [Function],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                  "width": [Function],
                                },
                                "direction": "ltr",
                                "mixins": Object {
                                  "gutters": [Function],
                                  "toolbar": Object {
                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                      "minHeight": 48,
                                    },
                                    "@media (min-width:600px)": Object {
                                      "minHeight": 64,
                                    },
                                    "minHeight": 56,
                                  },
                                },
                                "overrides": Object {},
                                "palette": Object {
                                  "action": Object {
                                    "activatedOpacity": 0.12,
                                    "active": "rgba(0, 0, 0, 0.54)",
                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                    "disabledOpacity": 0.38,
                                    "focus": "rgba(0, 0, 0, 0.12)",
                                    "focusOpacity": 0.12,
                                    "hover": "rgba(0, 0, 0, 0.04)",
                                    "hoverOpacity": 0.04,
                                    "selected": "rgba(0, 0, 0, 0.08)",
                                    "selectedOpacity": 0.08,
                                  },
                                  "augmentColor": [Function],
                                  "background": Object {
                                    "default": "#fafafa",
                                    "paper": "#fff",
                                  },
                                  "common": Object {
                                    "black": "#000",
                                    "white": "#fff",
                                  },
                                  "contrastThreshold": 3,
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "error": Object {
                                    "contrastText": "#fff",
                                    "dark": "#d32f2f",
                                    "light": "#e57373",
                                    "main": "#f44336",
                                  },
                                  "getContrastText": [Function],
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "info": Object {
                                    "contrastText": "#fff",
                                    "dark": "#1976d2",
                                    "light": "#64b5f6",
                                    "main": "#2196f3",
                                  },
                                  "primary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "success": Object {
                                    "contrastText": "rgba(0, 0, 0, 0.87)",
                                    "dark": "#388e3c",
                                    "light": "#81c784",
                                    "main": "#4caf50",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "hint": "rgba(0, 0, 0, 0.38)",
                                    "primary": "rgba(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                  "tonalOffset": 0.2,
                                  "type": "light",
                                  "warning": Object {
                                    "contrastText": "rgba(0, 0, 0, 0.87)",
                                    "dark": "#f57c00",
                                    "light": "#ffb74d",
                                    "main": "#ff9800",
                                  },
                                },
                                "props": Object {},
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "shape": Object {
                                  "borderRadius": 4,
                                },
                                "spacing": [Function],
                                "transitions": Object {
                                  "create": [Function],
                                  "duration": Object {
                                    "complex": 375,
                                    "enteringScreen": 225,
                                    "leavingScreen": 195,
                                    "short": 250,
                                    "shorter": 200,
                                    "shortest": 150,
                                    "standard": 300,
                                  },
                                  "easing": Object {
                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                  },
                                  "getAutoHeightDuration": [Function],
                                },
                                "typography": Object {
                                  "body1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.5,
                                  },
                                  "body2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.01071em",
                                    "lineHeight": 1.43,
                                  },
                                  "button": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.02857em",
                                    "lineHeight": 1.75,
                                    "textTransform": "uppercase",
                                  },
                                  "caption": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.03333em",
                                    "lineHeight": 1.66,
                                  },
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": 14,
                                  "fontWeightBold": 700,
                                  "fontWeightLight": 300,
                                  "fontWeightMedium": 500,
                                  "fontWeightRegular": 400,
                                  "h1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "6rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.01562em",
                                    "lineHeight": 1.167,
                                  },
                                  "h2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.75rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.00833em",
                                    "lineHeight": 1.2,
                                  },
                                  "h3": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.167,
                                  },
                                  "h4": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00735em",
                                    "lineHeight": 1.235,
                                  },
                                  "h5": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.334,
                                  },
                                  "h6": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.25rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.0075em",
                                    "lineHeight": 1.6,
                                  },
                                  "htmlFontSize": 16,
                                  "overline": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.08333em",
                                    "lineHeight": 2.66,
                                    "textTransform": "uppercase",
                                  },
                                  "pxToRem": [Function],
                                  "round": [Function],
                                  "subtitle1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.75,
                                  },
                                  "subtitle2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.00714em",
                                    "lineHeight": 1.57,
                                  },
                                },
                                "zIndex": Object {
                                  "appBar": 1100,
                                  "drawer": 1200,
                                  "mobileStepper": 1000,
                                  "modal": 1300,
                                  "snackbar": 1400,
                                  "speedDial": 1050,
                                  "tooltip": 1500,
                                },
                              },
                              "name": "MuiBackdrop",
                            },
                            "propTypes": Object {
                              "classes": [Function],
                              "innerRef": [Function],
                            },
                            "render": [Function],
                            "useStyles": [Function],
                          }
                        }
                        BackdropProps={
                          Object {
                            "transitionDuration": Object {
                              "enter": 225,
                              "exit": 195,
                            },
                          }
                        }
                        className="MuiDialog-root"
                        closeAfterTransition={true}
                        disableBackdropClick={false}
                        disableEscapeKeyDown={false}
                        onClose={[Function]}
                        open={false}
                      />
                    </ForwardRef(Dialog)>
                  </WithStyles(ForwardRef(Dialog))>
                </div>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
            <div
              data-test="sentinelEnd"
              tabIndex={0}
            />
          </TrapFocus>
        </div>
      </Portal>
    </ForwardRef(Portal)>
  </ForwardRef(Modal)>
</editSprint>
`;
