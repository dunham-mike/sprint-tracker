// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Layout Component should match the snapshot for a demo user 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <Connect(WithStyles(Layout))>
        <WithStyles(Layout)
          dispatch={[Function]}
          isAuth={true}
          isDemo={true}
        >
          <Layout
            classes={
              Object {
                "childrenContainer": "Layout-childrenContainer-5",
                "list": "Layout-list-4",
                "menuButton": "Layout-menuButton-2",
                "root": "Layout-root-1",
                "title": "Layout-title-3",
              }
            }
            dispatch={[Function]}
            isAuth={true}
            isDemo={true}
          >
            <div
              className="Layout-root-1"
            >
              <WithStyles(ForwardRef(AppBar))
                position="fixed"
              >
                <ForwardRef(AppBar)
                  classes={
                    Object {
                      "colorDefault": "MuiAppBar-colorDefault",
                      "colorInherit": "MuiAppBar-colorInherit",
                      "colorPrimary": "MuiAppBar-colorPrimary",
                      "colorSecondary": "MuiAppBar-colorSecondary",
                      "colorTransparent": "MuiAppBar-colorTransparent",
                      "positionAbsolute": "MuiAppBar-positionAbsolute",
                      "positionFixed": "MuiAppBar-positionFixed",
                      "positionRelative": "MuiAppBar-positionRelative",
                      "positionStatic": "MuiAppBar-positionStatic",
                      "positionSticky": "MuiAppBar-positionSticky",
                      "root": "MuiAppBar-root",
                    }
                  }
                  position="fixed"
                >
                  <WithStyles(ForwardRef(Paper))
                    className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary mui-fixed"
                    component="header"
                    elevation={4}
                    square={true}
                  >
                    <ForwardRef(Paper)
                      className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary mui-fixed"
                      classes={
                        Object {
                          "elevation0": "MuiPaper-elevation0",
                          "elevation1": "MuiPaper-elevation1",
                          "elevation10": "MuiPaper-elevation10",
                          "elevation11": "MuiPaper-elevation11",
                          "elevation12": "MuiPaper-elevation12",
                          "elevation13": "MuiPaper-elevation13",
                          "elevation14": "MuiPaper-elevation14",
                          "elevation15": "MuiPaper-elevation15",
                          "elevation16": "MuiPaper-elevation16",
                          "elevation17": "MuiPaper-elevation17",
                          "elevation18": "MuiPaper-elevation18",
                          "elevation19": "MuiPaper-elevation19",
                          "elevation2": "MuiPaper-elevation2",
                          "elevation20": "MuiPaper-elevation20",
                          "elevation21": "MuiPaper-elevation21",
                          "elevation22": "MuiPaper-elevation22",
                          "elevation23": "MuiPaper-elevation23",
                          "elevation24": "MuiPaper-elevation24",
                          "elevation3": "MuiPaper-elevation3",
                          "elevation4": "MuiPaper-elevation4",
                          "elevation5": "MuiPaper-elevation5",
                          "elevation6": "MuiPaper-elevation6",
                          "elevation7": "MuiPaper-elevation7",
                          "elevation8": "MuiPaper-elevation8",
                          "elevation9": "MuiPaper-elevation9",
                          "outlined": "MuiPaper-outlined",
                          "root": "MuiPaper-root",
                          "rounded": "MuiPaper-rounded",
                        }
                      }
                      component="header"
                      elevation={4}
                      square={true}
                    >
                      <header
                        className="MuiPaper-root MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary mui-fixed MuiPaper-elevation4"
                      >
                        <WithStyles(ForwardRef(Toolbar))>
                          <ForwardRef(Toolbar)
                            classes={
                              Object {
                                "dense": "MuiToolbar-dense",
                                "gutters": "MuiToolbar-gutters",
                                "regular": "MuiToolbar-regular",
                                "root": "MuiToolbar-root",
                              }
                            }
                          >
                            <div
                              className="MuiToolbar-root MuiToolbar-regular MuiToolbar-gutters"
                            >
                              <WithStyles(ForwardRef(IconButton))
                                aria-label="menu"
                                className="Layout-menuButton-2"
                                color="inherit"
                                edge="start"
                                onClick={[Function]}
                              >
                                <ForwardRef(IconButton)
                                  aria-label="menu"
                                  className="Layout-menuButton-2"
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit",
                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                      "edgeStart": "MuiIconButton-edgeStart",
                                      "label": "MuiIconButton-label",
                                      "root": "MuiIconButton-root",
                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                    }
                                  }
                                  color="inherit"
                                  edge="start"
                                  onClick={[Function]}
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-label="menu"
                                    centerRipple={true}
                                    className="MuiIconButton-root Layout-menuButton-2 MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                    disabled={false}
                                    focusRipple={true}
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-label="menu"
                                      centerRipple={true}
                                      className="MuiIconButton-root Layout-menuButton-2 MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <button
                                        aria-label="menu"
                                        className="MuiButtonBase-root MuiIconButton-root Layout-menuButton-2 MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        <span
                                          className="MuiIconButton-label"
                                        >
                                          <ForwardRef>
                                            <WithStyles(ForwardRef(SvgIcon))>
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  role="presentation"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef>
                                        </span>
                                        <NoSsr>
                                          <WithStyles(undefined)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(undefined)>
                                        </NoSsr>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(IconButton)>
                              </WithStyles(ForwardRef(IconButton))>
                              <WithStyles(ForwardRef(Typography))
                                className="Layout-title-3"
                                variant="h6"
                              >
                                <ForwardRef(Typography)
                                  className="Layout-title-3"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  variant="h6"
                                >
                                  <h6
                                    className="MuiTypography-root Layout-title-3 MuiTypography-h6"
                                  >
                                    <WithStyles(ForwardRef(Link))
                                      color="inherit"
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/demo"
                                      underline="none"
                                      variant="h6"
                                    >
                                      <ForwardRef(Link)
                                        classes={
                                          Object {
                                            "button": "MuiLink-button",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiLink-root",
                                            "underlineAlways": "MuiLink-underlineAlways",
                                            "underlineHover": "MuiLink-underlineHover",
                                            "underlineNone": "MuiLink-underlineNone",
                                          }
                                        }
                                        color="inherit"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        to="/demo"
                                        underline="none"
                                        variant="h6"
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="MuiLink-root MuiLink-underlineNone"
                                          color="inherit"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/demo"
                                          variant="h6"
                                        >
                                          <ForwardRef(Typography)
                                            className="MuiLink-root MuiLink-underlineNone"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            color="inherit"
                                            component={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "displayName": "Link",
                                                "propTypes": Object {
                                                  "innerRef": [Function],
                                                  "onClick": [Function],
                                                  "replace": [Function],
                                                  "target": [Function],
                                                  "to": [Function],
                                                },
                                                "render": [Function],
                                              }
                                            }
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/demo"
                                            variant="h6"
                                          >
                                            <Link
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineNone MuiTypography-h6 MuiTypography-colorInherit"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              to="/demo"
                                            >
                                              <LinkAnchor
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineNone MuiTypography-h6 MuiTypography-colorInherit"
                                                href="/demo"
                                                navigate={[Function]}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                              >
                                                <a
                                                  className="MuiTypography-root MuiLink-root MuiLink-underlineNone MuiTypography-h6 MuiTypography-colorInherit"
                                                  href="/demo"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onFocus={[Function]}
                                                >
                                                  Deliberate Sprints
                                                </a>
                                              </LinkAnchor>
                                            </Link>
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </ForwardRef(Link)>
                                    </WithStyles(ForwardRef(Link))>
                                  </h6>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                              <WithStyles(ForwardRef(Button))
                                color="inherit"
                                component={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "displayName": "Link",
                                    "propTypes": Object {
                                      "innerRef": [Function],
                                      "onClick": [Function],
                                      "replace": [Function],
                                      "target": [Function],
                                      "to": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                to="/logout"
                              >
                                <ForwardRef(Button)
                                  classes={
                                    Object {
                                      "colorInherit": "MuiButton-colorInherit",
                                      "contained": "MuiButton-contained",
                                      "containedPrimary": "MuiButton-containedPrimary",
                                      "containedSecondary": "MuiButton-containedSecondary",
                                      "containedSizeLarge": "MuiButton-containedSizeLarge",
                                      "containedSizeSmall": "MuiButton-containedSizeSmall",
                                      "disableElevation": "MuiButton-disableElevation",
                                      "disabled": "Mui-disabled",
                                      "endIcon": "MuiButton-endIcon",
                                      "focusVisible": "Mui-focusVisible",
                                      "fullWidth": "MuiButton-fullWidth",
                                      "iconSizeLarge": "MuiButton-iconSizeLarge",
                                      "iconSizeMedium": "MuiButton-iconSizeMedium",
                                      "iconSizeSmall": "MuiButton-iconSizeSmall",
                                      "label": "MuiButton-label",
                                      "outlined": "MuiButton-outlined",
                                      "outlinedPrimary": "MuiButton-outlinedPrimary",
                                      "outlinedSecondary": "MuiButton-outlinedSecondary",
                                      "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                      "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                      "root": "MuiButton-root",
                                      "sizeLarge": "MuiButton-sizeLarge",
                                      "sizeSmall": "MuiButton-sizeSmall",
                                      "startIcon": "MuiButton-startIcon",
                                      "text": "MuiButton-text",
                                      "textPrimary": "MuiButton-textPrimary",
                                      "textSecondary": "MuiButton-textSecondary",
                                      "textSizeLarge": "MuiButton-textSizeLarge",
                                      "textSizeSmall": "MuiButton-textSizeSmall",
                                    }
                                  }
                                  color="inherit"
                                  component={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "displayName": "Link",
                                      "propTypes": Object {
                                        "innerRef": [Function],
                                        "onClick": [Function],
                                        "replace": [Function],
                                        "target": [Function],
                                        "to": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  to="/logout"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    className="MuiButton-root MuiButton-text MuiButton-colorInherit"
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    focusVisibleClassName="Mui-focusVisible"
                                    to="/logout"
                                    type="button"
                                  >
                                    <ForwardRef(ButtonBase)
                                      className="MuiButton-root MuiButton-text MuiButton-colorInherit"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      disabled={false}
                                      focusRipple={true}
                                      focusVisibleClassName="Mui-focusVisible"
                                      to="/logout"
                                      type="button"
                                    >
                                      <Link
                                        aria-disabled={false}
                                        className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-colorInherit"
                                        onBlur={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        role="button"
                                        tabIndex={0}
                                        to="/logout"
                                      >
                                        <LinkAnchor
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-colorInherit"
                                          href="/logout"
                                          navigate={[Function]}
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          role="button"
                                          tabIndex={0}
                                        >
                                          <a
                                            aria-disabled={false}
                                            className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-colorInherit"
                                            href="/logout"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            role="button"
                                            tabIndex={0}
                                          >
                                            <span
                                              className="MuiButton-label"
                                            >
                                              END DEMO
                                            </span>
                                            <NoSsr>
                                              <WithStyles(undefined)
                                                center={false}
                                              >
                                                <ForwardRef(TouchRipple)
                                                  center={false}
                                                  classes={
                                                    Object {
                                                      "child": "MuiTouchRipple-child",
                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                      "ripple": "MuiTouchRipple-ripple",
                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                      "root": "MuiTouchRipple-root",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root"
                                                  >
                                                    <TransitionGroup
                                                      childFactory={[Function]}
                                                      component={null}
                                                      exit={true}
                                                    />
                                                  </span>
                                                </ForwardRef(TouchRipple)>
                                              </WithStyles(undefined)>
                                            </NoSsr>
                                          </a>
                                        </LinkAnchor>
                                      </Link>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(Button)>
                              </WithStyles(ForwardRef(Button))>
                            </div>
                          </ForwardRef(Toolbar)>
                        </WithStyles(ForwardRef(Toolbar))>
                      </header>
                    </ForwardRef(Paper)>
                  </WithStyles(ForwardRef(Paper))>
                </ForwardRef(AppBar)>
              </WithStyles(ForwardRef(AppBar))>
              <WithStyles(ForwardRef(Drawer))
                onClose={[Function]}
                open={false}
              >
                <ForwardRef(Drawer)
                  classes={
                    Object {
                      "docked": "MuiDrawer-docked",
                      "modal": "MuiDrawer-modal",
                      "paper": "MuiDrawer-paper",
                      "paperAnchorBottom": "MuiDrawer-paperAnchorBottom",
                      "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom",
                      "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft",
                      "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight",
                      "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop",
                      "paperAnchorLeft": "MuiDrawer-paperAnchorLeft",
                      "paperAnchorRight": "MuiDrawer-paperAnchorRight",
                      "paperAnchorTop": "MuiDrawer-paperAnchorTop",
                      "root": "MuiDrawer-root",
                    }
                  }
                  onClose={[Function]}
                  open={false}
                >
                  <ForwardRef(Modal)
                    BackdropComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "Naked": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "propTypes": Object {
                            "children": [Function],
                            "className": [Function],
                            "classes": [Function],
                            "invisible": [Function],
                            "open": [Function],
                            "transitionDuration": [Function],
                          },
                          "render": [Function],
                        },
                        "defaultProps": undefined,
                        "displayName": "WithStyles(ForwardRef(Backdrop))",
                        "options": Object {
                          "defaultTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "only": [Function],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                              "width": [Function],
                            },
                            "direction": "ltr",
                            "mixins": Object {
                              "gutters": [Function],
                              "toolbar": Object {
                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                  "minHeight": 48,
                                },
                                "@media (min-width:600px)": Object {
                                  "minHeight": 64,
                                },
                                "minHeight": 56,
                              },
                            },
                            "overrides": Object {},
                            "palette": Object {
                              "action": Object {
                                "activatedOpacity": 0.12,
                                "active": "rgba(0, 0, 0, 0.54)",
                                "disabled": "rgba(0, 0, 0, 0.26)",
                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                "disabledOpacity": 0.38,
                                "focus": "rgba(0, 0, 0, 0.12)",
                                "focusOpacity": 0.12,
                                "hover": "rgba(0, 0, 0, 0.04)",
                                "hoverOpacity": 0.04,
                                "selected": "rgba(0, 0, 0, 0.08)",
                                "selectedOpacity": 0.08,
                              },
                              "augmentColor": [Function],
                              "background": Object {
                                "default": "#fafafa",
                                "paper": "#fff",
                              },
                              "common": Object {
                                "black": "#000",
                                "white": "#fff",
                              },
                              "contrastThreshold": 3,
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "error": Object {
                                "contrastText": "#fff",
                                "dark": "#d32f2f",
                                "light": "#e57373",
                                "main": "#f44336",
                              },
                              "getContrastText": [Function],
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "info": Object {
                                "contrastText": "#fff",
                                "dark": "#1976d2",
                                "light": "#64b5f6",
                                "main": "#2196f3",
                              },
                              "primary": Object {
                                "contrastText": "#fff",
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "contrastText": "#fff",
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "success": Object {
                                "contrastText": "rgba(0, 0, 0, 0.87)",
                                "dark": "#388e3c",
                                "light": "#81c784",
                                "main": "#4caf50",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "hint": "rgba(0, 0, 0, 0.38)",
                                "primary": "rgba(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                              "tonalOffset": 0.2,
                              "type": "light",
                              "warning": Object {
                                "contrastText": "rgba(0, 0, 0, 0.87)",
                                "dark": "#f57c00",
                                "light": "#ffb74d",
                                "main": "#ff9800",
                              },
                            },
                            "props": Object {},
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "shape": Object {
                              "borderRadius": 4,
                            },
                            "spacing": [Function],
                            "transitions": Object {
                              "create": [Function],
                              "duration": Object {
                                "complex": 375,
                                "enteringScreen": 225,
                                "leavingScreen": 195,
                                "short": 250,
                                "shorter": 200,
                                "shortest": 150,
                                "standard": 300,
                              },
                              "easing": Object {
                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                              },
                              "getAutoHeightDuration": [Function],
                            },
                            "typography": Object {
                              "body1": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.00938em",
                                "lineHeight": 1.5,
                              },
                              "body2": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.01071em",
                                "lineHeight": 1.43,
                              },
                              "button": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "letterSpacing": "0.02857em",
                                "lineHeight": 1.75,
                                "textTransform": "uppercase",
                              },
                              "caption": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.03333em",
                                "lineHeight": 1.66,
                              },
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": 14,
                              "fontWeightBold": 700,
                              "fontWeightLight": 300,
                              "fontWeightMedium": 500,
                              "fontWeightRegular": 400,
                              "h1": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "6rem",
                                "fontWeight": 300,
                                "letterSpacing": "-0.01562em",
                                "lineHeight": 1.167,
                              },
                              "h2": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3.75rem",
                                "fontWeight": 300,
                                "letterSpacing": "-0.00833em",
                                "lineHeight": 1.2,
                              },
                              "h3": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3rem",
                                "fontWeight": 400,
                                "letterSpacing": "0em",
                                "lineHeight": 1.167,
                              },
                              "h4": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.125rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.00735em",
                                "lineHeight": 1.235,
                              },
                              "h5": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.5rem",
                                "fontWeight": 400,
                                "letterSpacing": "0em",
                                "lineHeight": 1.334,
                              },
                              "h6": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.25rem",
                                "fontWeight": 500,
                                "letterSpacing": "0.0075em",
                                "lineHeight": 1.6,
                              },
                              "htmlFontSize": 16,
                              "overline": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.08333em",
                                "lineHeight": 2.66,
                                "textTransform": "uppercase",
                              },
                              "pxToRem": [Function],
                              "round": [Function],
                              "subtitle1": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.00938em",
                                "lineHeight": 1.75,
                              },
                              "subtitle2": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "letterSpacing": "0.00714em",
                                "lineHeight": 1.57,
                              },
                            },
                            "zIndex": Object {
                              "appBar": 1100,
                              "drawer": 1200,
                              "mobileStepper": 1000,
                              "modal": 1300,
                              "snackbar": 1400,
                              "speedDial": 1050,
                              "tooltip": 1500,
                            },
                          },
                          "name": "MuiBackdrop",
                        },
                        "propTypes": Object {
                          "classes": [Function],
                          "innerRef": [Function],
                        },
                        "render": [Function],
                        "useStyles": [Function],
                      }
                    }
                    BackdropProps={
                      Object {
                        "transitionDuration": Object {
                          "enter": 225,
                          "exit": 195,
                        },
                      }
                    }
                    className="MuiDrawer-root MuiDrawer-modal"
                    onClose={[Function]}
                    open={false}
                  />
                </ForwardRef(Drawer)>
              </WithStyles(ForwardRef(Drawer))>
              <div
                className="Layout-childrenContainer-5"
              />
            </div>
          </Layout>
        </WithStyles(Layout)>
      </Connect(WithStyles(Layout))>
    </Provider>
  </Router>
</BrowserRouter>
`;

exports[`Layout Component should match the snapshot for an authenticated user 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <Connect(WithStyles(Layout))>
        <WithStyles(Layout)
          dispatch={[Function]}
          isAuth={true}
          isDemo={false}
        >
          <Layout
            classes={
              Object {
                "childrenContainer": "Layout-childrenContainer-5",
                "list": "Layout-list-4",
                "menuButton": "Layout-menuButton-2",
                "root": "Layout-root-1",
                "title": "Layout-title-3",
              }
            }
            dispatch={[Function]}
            isAuth={true}
            isDemo={false}
          >
            <div
              className="Layout-root-1"
            >
              <WithStyles(ForwardRef(AppBar))
                position="fixed"
              >
                <ForwardRef(AppBar)
                  classes={
                    Object {
                      "colorDefault": "MuiAppBar-colorDefault",
                      "colorInherit": "MuiAppBar-colorInherit",
                      "colorPrimary": "MuiAppBar-colorPrimary",
                      "colorSecondary": "MuiAppBar-colorSecondary",
                      "colorTransparent": "MuiAppBar-colorTransparent",
                      "positionAbsolute": "MuiAppBar-positionAbsolute",
                      "positionFixed": "MuiAppBar-positionFixed",
                      "positionRelative": "MuiAppBar-positionRelative",
                      "positionStatic": "MuiAppBar-positionStatic",
                      "positionSticky": "MuiAppBar-positionSticky",
                      "root": "MuiAppBar-root",
                    }
                  }
                  position="fixed"
                >
                  <WithStyles(ForwardRef(Paper))
                    className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary mui-fixed"
                    component="header"
                    elevation={4}
                    square={true}
                  >
                    <ForwardRef(Paper)
                      className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary mui-fixed"
                      classes={
                        Object {
                          "elevation0": "MuiPaper-elevation0",
                          "elevation1": "MuiPaper-elevation1",
                          "elevation10": "MuiPaper-elevation10",
                          "elevation11": "MuiPaper-elevation11",
                          "elevation12": "MuiPaper-elevation12",
                          "elevation13": "MuiPaper-elevation13",
                          "elevation14": "MuiPaper-elevation14",
                          "elevation15": "MuiPaper-elevation15",
                          "elevation16": "MuiPaper-elevation16",
                          "elevation17": "MuiPaper-elevation17",
                          "elevation18": "MuiPaper-elevation18",
                          "elevation19": "MuiPaper-elevation19",
                          "elevation2": "MuiPaper-elevation2",
                          "elevation20": "MuiPaper-elevation20",
                          "elevation21": "MuiPaper-elevation21",
                          "elevation22": "MuiPaper-elevation22",
                          "elevation23": "MuiPaper-elevation23",
                          "elevation24": "MuiPaper-elevation24",
                          "elevation3": "MuiPaper-elevation3",
                          "elevation4": "MuiPaper-elevation4",
                          "elevation5": "MuiPaper-elevation5",
                          "elevation6": "MuiPaper-elevation6",
                          "elevation7": "MuiPaper-elevation7",
                          "elevation8": "MuiPaper-elevation8",
                          "elevation9": "MuiPaper-elevation9",
                          "outlined": "MuiPaper-outlined",
                          "root": "MuiPaper-root",
                          "rounded": "MuiPaper-rounded",
                        }
                      }
                      component="header"
                      elevation={4}
                      square={true}
                    >
                      <header
                        className="MuiPaper-root MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary mui-fixed MuiPaper-elevation4"
                      >
                        <WithStyles(ForwardRef(Toolbar))>
                          <ForwardRef(Toolbar)
                            classes={
                              Object {
                                "dense": "MuiToolbar-dense",
                                "gutters": "MuiToolbar-gutters",
                                "regular": "MuiToolbar-regular",
                                "root": "MuiToolbar-root",
                              }
                            }
                          >
                            <div
                              className="MuiToolbar-root MuiToolbar-regular MuiToolbar-gutters"
                            >
                              <WithStyles(ForwardRef(IconButton))
                                aria-label="menu"
                                className="Layout-menuButton-2"
                                color="inherit"
                                edge="start"
                                onClick={[Function]}
                              >
                                <ForwardRef(IconButton)
                                  aria-label="menu"
                                  className="Layout-menuButton-2"
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit",
                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                      "edgeStart": "MuiIconButton-edgeStart",
                                      "label": "MuiIconButton-label",
                                      "root": "MuiIconButton-root",
                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                    }
                                  }
                                  color="inherit"
                                  edge="start"
                                  onClick={[Function]}
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-label="menu"
                                    centerRipple={true}
                                    className="MuiIconButton-root Layout-menuButton-2 MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                    disabled={false}
                                    focusRipple={true}
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-label="menu"
                                      centerRipple={true}
                                      className="MuiIconButton-root Layout-menuButton-2 MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <button
                                        aria-label="menu"
                                        className="MuiButtonBase-root MuiIconButton-root Layout-menuButton-2 MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        <span
                                          className="MuiIconButton-label"
                                        >
                                          <ForwardRef>
                                            <WithStyles(ForwardRef(SvgIcon))>
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  role="presentation"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef>
                                        </span>
                                        <NoSsr>
                                          <WithStyles(undefined)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(undefined)>
                                        </NoSsr>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(IconButton)>
                              </WithStyles(ForwardRef(IconButton))>
                              <WithStyles(ForwardRef(Typography))
                                className="Layout-title-3"
                                variant="h6"
                              >
                                <ForwardRef(Typography)
                                  className="Layout-title-3"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  variant="h6"
                                >
                                  <h6
                                    className="MuiTypography-root Layout-title-3 MuiTypography-h6"
                                  >
                                    <WithStyles(ForwardRef(Link))
                                      color="inherit"
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/"
                                      underline="none"
                                      variant="h6"
                                    >
                                      <ForwardRef(Link)
                                        classes={
                                          Object {
                                            "button": "MuiLink-button",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiLink-root",
                                            "underlineAlways": "MuiLink-underlineAlways",
                                            "underlineHover": "MuiLink-underlineHover",
                                            "underlineNone": "MuiLink-underlineNone",
                                          }
                                        }
                                        color="inherit"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        to="/"
                                        underline="none"
                                        variant="h6"
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="MuiLink-root MuiLink-underlineNone"
                                          color="inherit"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/"
                                          variant="h6"
                                        >
                                          <ForwardRef(Typography)
                                            className="MuiLink-root MuiLink-underlineNone"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            color="inherit"
                                            component={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "displayName": "Link",
                                                "propTypes": Object {
                                                  "innerRef": [Function],
                                                  "onClick": [Function],
                                                  "replace": [Function],
                                                  "target": [Function],
                                                  "to": [Function],
                                                },
                                                "render": [Function],
                                              }
                                            }
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/"
                                            variant="h6"
                                          >
                                            <Link
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineNone MuiTypography-h6 MuiTypography-colorInherit"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              to="/"
                                            >
                                              <LinkAnchor
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineNone MuiTypography-h6 MuiTypography-colorInherit"
                                                href="/"
                                                navigate={[Function]}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                              >
                                                <a
                                                  className="MuiTypography-root MuiLink-root MuiLink-underlineNone MuiTypography-h6 MuiTypography-colorInherit"
                                                  href="/"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onFocus={[Function]}
                                                >
                                                  Deliberate Sprints
                                                </a>
                                              </LinkAnchor>
                                            </Link>
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </ForwardRef(Link)>
                                    </WithStyles(ForwardRef(Link))>
                                  </h6>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                              <WithStyles(ForwardRef(Button))
                                color="inherit"
                                component={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "displayName": "Link",
                                    "propTypes": Object {
                                      "innerRef": [Function],
                                      "onClick": [Function],
                                      "replace": [Function],
                                      "target": [Function],
                                      "to": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                to="/logout"
                              >
                                <ForwardRef(Button)
                                  classes={
                                    Object {
                                      "colorInherit": "MuiButton-colorInherit",
                                      "contained": "MuiButton-contained",
                                      "containedPrimary": "MuiButton-containedPrimary",
                                      "containedSecondary": "MuiButton-containedSecondary",
                                      "containedSizeLarge": "MuiButton-containedSizeLarge",
                                      "containedSizeSmall": "MuiButton-containedSizeSmall",
                                      "disableElevation": "MuiButton-disableElevation",
                                      "disabled": "Mui-disabled",
                                      "endIcon": "MuiButton-endIcon",
                                      "focusVisible": "Mui-focusVisible",
                                      "fullWidth": "MuiButton-fullWidth",
                                      "iconSizeLarge": "MuiButton-iconSizeLarge",
                                      "iconSizeMedium": "MuiButton-iconSizeMedium",
                                      "iconSizeSmall": "MuiButton-iconSizeSmall",
                                      "label": "MuiButton-label",
                                      "outlined": "MuiButton-outlined",
                                      "outlinedPrimary": "MuiButton-outlinedPrimary",
                                      "outlinedSecondary": "MuiButton-outlinedSecondary",
                                      "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                      "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                      "root": "MuiButton-root",
                                      "sizeLarge": "MuiButton-sizeLarge",
                                      "sizeSmall": "MuiButton-sizeSmall",
                                      "startIcon": "MuiButton-startIcon",
                                      "text": "MuiButton-text",
                                      "textPrimary": "MuiButton-textPrimary",
                                      "textSecondary": "MuiButton-textSecondary",
                                      "textSizeLarge": "MuiButton-textSizeLarge",
                                      "textSizeSmall": "MuiButton-textSizeSmall",
                                    }
                                  }
                                  color="inherit"
                                  component={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "displayName": "Link",
                                      "propTypes": Object {
                                        "innerRef": [Function],
                                        "onClick": [Function],
                                        "replace": [Function],
                                        "target": [Function],
                                        "to": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  to="/logout"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    className="MuiButton-root MuiButton-text MuiButton-colorInherit"
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    focusVisibleClassName="Mui-focusVisible"
                                    to="/logout"
                                    type="button"
                                  >
                                    <ForwardRef(ButtonBase)
                                      className="MuiButton-root MuiButton-text MuiButton-colorInherit"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      disabled={false}
                                      focusRipple={true}
                                      focusVisibleClassName="Mui-focusVisible"
                                      to="/logout"
                                      type="button"
                                    >
                                      <Link
                                        aria-disabled={false}
                                        className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-colorInherit"
                                        onBlur={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        role="button"
                                        tabIndex={0}
                                        to="/logout"
                                      >
                                        <LinkAnchor
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-colorInherit"
                                          href="/logout"
                                          navigate={[Function]}
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          role="button"
                                          tabIndex={0}
                                        >
                                          <a
                                            aria-disabled={false}
                                            className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-colorInherit"
                                            href="/logout"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            role="button"
                                            tabIndex={0}
                                          >
                                            <span
                                              className="MuiButton-label"
                                            >
                                              LOG OUT
                                            </span>
                                            <NoSsr>
                                              <WithStyles(undefined)
                                                center={false}
                                              >
                                                <ForwardRef(TouchRipple)
                                                  center={false}
                                                  classes={
                                                    Object {
                                                      "child": "MuiTouchRipple-child",
                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                      "ripple": "MuiTouchRipple-ripple",
                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                      "root": "MuiTouchRipple-root",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root"
                                                  >
                                                    <TransitionGroup
                                                      childFactory={[Function]}
                                                      component={null}
                                                      exit={true}
                                                    />
                                                  </span>
                                                </ForwardRef(TouchRipple)>
                                              </WithStyles(undefined)>
                                            </NoSsr>
                                          </a>
                                        </LinkAnchor>
                                      </Link>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(Button)>
                              </WithStyles(ForwardRef(Button))>
                            </div>
                          </ForwardRef(Toolbar)>
                        </WithStyles(ForwardRef(Toolbar))>
                      </header>
                    </ForwardRef(Paper)>
                  </WithStyles(ForwardRef(Paper))>
                </ForwardRef(AppBar)>
              </WithStyles(ForwardRef(AppBar))>
              <WithStyles(ForwardRef(Drawer))
                onClose={[Function]}
                open={false}
              >
                <ForwardRef(Drawer)
                  classes={
                    Object {
                      "docked": "MuiDrawer-docked",
                      "modal": "MuiDrawer-modal",
                      "paper": "MuiDrawer-paper",
                      "paperAnchorBottom": "MuiDrawer-paperAnchorBottom",
                      "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom",
                      "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft",
                      "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight",
                      "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop",
                      "paperAnchorLeft": "MuiDrawer-paperAnchorLeft",
                      "paperAnchorRight": "MuiDrawer-paperAnchorRight",
                      "paperAnchorTop": "MuiDrawer-paperAnchorTop",
                      "root": "MuiDrawer-root",
                    }
                  }
                  onClose={[Function]}
                  open={false}
                >
                  <ForwardRef(Modal)
                    BackdropComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "Naked": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "propTypes": Object {
                            "children": [Function],
                            "className": [Function],
                            "classes": [Function],
                            "invisible": [Function],
                            "open": [Function],
                            "transitionDuration": [Function],
                          },
                          "render": [Function],
                        },
                        "defaultProps": undefined,
                        "displayName": "WithStyles(ForwardRef(Backdrop))",
                        "options": Object {
                          "defaultTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "only": [Function],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                              "width": [Function],
                            },
                            "direction": "ltr",
                            "mixins": Object {
                              "gutters": [Function],
                              "toolbar": Object {
                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                  "minHeight": 48,
                                },
                                "@media (min-width:600px)": Object {
                                  "minHeight": 64,
                                },
                                "minHeight": 56,
                              },
                            },
                            "overrides": Object {},
                            "palette": Object {
                              "action": Object {
                                "activatedOpacity": 0.12,
                                "active": "rgba(0, 0, 0, 0.54)",
                                "disabled": "rgba(0, 0, 0, 0.26)",
                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                "disabledOpacity": 0.38,
                                "focus": "rgba(0, 0, 0, 0.12)",
                                "focusOpacity": 0.12,
                                "hover": "rgba(0, 0, 0, 0.04)",
                                "hoverOpacity": 0.04,
                                "selected": "rgba(0, 0, 0, 0.08)",
                                "selectedOpacity": 0.08,
                              },
                              "augmentColor": [Function],
                              "background": Object {
                                "default": "#fafafa",
                                "paper": "#fff",
                              },
                              "common": Object {
                                "black": "#000",
                                "white": "#fff",
                              },
                              "contrastThreshold": 3,
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "error": Object {
                                "contrastText": "#fff",
                                "dark": "#d32f2f",
                                "light": "#e57373",
                                "main": "#f44336",
                              },
                              "getContrastText": [Function],
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "info": Object {
                                "contrastText": "#fff",
                                "dark": "#1976d2",
                                "light": "#64b5f6",
                                "main": "#2196f3",
                              },
                              "primary": Object {
                                "contrastText": "#fff",
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "contrastText": "#fff",
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "success": Object {
                                "contrastText": "rgba(0, 0, 0, 0.87)",
                                "dark": "#388e3c",
                                "light": "#81c784",
                                "main": "#4caf50",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "hint": "rgba(0, 0, 0, 0.38)",
                                "primary": "rgba(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                              "tonalOffset": 0.2,
                              "type": "light",
                              "warning": Object {
                                "contrastText": "rgba(0, 0, 0, 0.87)",
                                "dark": "#f57c00",
                                "light": "#ffb74d",
                                "main": "#ff9800",
                              },
                            },
                            "props": Object {},
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "shape": Object {
                              "borderRadius": 4,
                            },
                            "spacing": [Function],
                            "transitions": Object {
                              "create": [Function],
                              "duration": Object {
                                "complex": 375,
                                "enteringScreen": 225,
                                "leavingScreen": 195,
                                "short": 250,
                                "shorter": 200,
                                "shortest": 150,
                                "standard": 300,
                              },
                              "easing": Object {
                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                              },
                              "getAutoHeightDuration": [Function],
                            },
                            "typography": Object {
                              "body1": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.00938em",
                                "lineHeight": 1.5,
                              },
                              "body2": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.01071em",
                                "lineHeight": 1.43,
                              },
                              "button": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "letterSpacing": "0.02857em",
                                "lineHeight": 1.75,
                                "textTransform": "uppercase",
                              },
                              "caption": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.03333em",
                                "lineHeight": 1.66,
                              },
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": 14,
                              "fontWeightBold": 700,
                              "fontWeightLight": 300,
                              "fontWeightMedium": 500,
                              "fontWeightRegular": 400,
                              "h1": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "6rem",
                                "fontWeight": 300,
                                "letterSpacing": "-0.01562em",
                                "lineHeight": 1.167,
                              },
                              "h2": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3.75rem",
                                "fontWeight": 300,
                                "letterSpacing": "-0.00833em",
                                "lineHeight": 1.2,
                              },
                              "h3": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3rem",
                                "fontWeight": 400,
                                "letterSpacing": "0em",
                                "lineHeight": 1.167,
                              },
                              "h4": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.125rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.00735em",
                                "lineHeight": 1.235,
                              },
                              "h5": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.5rem",
                                "fontWeight": 400,
                                "letterSpacing": "0em",
                                "lineHeight": 1.334,
                              },
                              "h6": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.25rem",
                                "fontWeight": 500,
                                "letterSpacing": "0.0075em",
                                "lineHeight": 1.6,
                              },
                              "htmlFontSize": 16,
                              "overline": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.08333em",
                                "lineHeight": 2.66,
                                "textTransform": "uppercase",
                              },
                              "pxToRem": [Function],
                              "round": [Function],
                              "subtitle1": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.00938em",
                                "lineHeight": 1.75,
                              },
                              "subtitle2": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "letterSpacing": "0.00714em",
                                "lineHeight": 1.57,
                              },
                            },
                            "zIndex": Object {
                              "appBar": 1100,
                              "drawer": 1200,
                              "mobileStepper": 1000,
                              "modal": 1300,
                              "snackbar": 1400,
                              "speedDial": 1050,
                              "tooltip": 1500,
                            },
                          },
                          "name": "MuiBackdrop",
                        },
                        "propTypes": Object {
                          "classes": [Function],
                          "innerRef": [Function],
                        },
                        "render": [Function],
                        "useStyles": [Function],
                      }
                    }
                    BackdropProps={
                      Object {
                        "transitionDuration": Object {
                          "enter": 225,
                          "exit": 195,
                        },
                      }
                    }
                    className="MuiDrawer-root MuiDrawer-modal"
                    onClose={[Function]}
                    open={false}
                  />
                </ForwardRef(Drawer)>
              </WithStyles(ForwardRef(Drawer))>
              <div
                className="Layout-childrenContainer-5"
              />
            </div>
          </Layout>
        </WithStyles(Layout)>
      </Connect(WithStyles(Layout))>
    </Provider>
  </Router>
</BrowserRouter>
`;

exports[`Layout Component should match the snapshot for an unauthenticated user 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <Connect(WithStyles(Layout))>
        <WithStyles(Layout)
          dispatch={[Function]}
          isAuth={false}
          isDemo={false}
        >
          <Layout
            classes={
              Object {
                "childrenContainer": "Layout-childrenContainer-5",
                "list": "Layout-list-4",
                "menuButton": "Layout-menuButton-2",
                "root": "Layout-root-1",
                "title": "Layout-title-3",
              }
            }
            dispatch={[Function]}
            isAuth={false}
            isDemo={false}
          >
            <div
              className="Layout-root-1"
            >
              <WithStyles(ForwardRef(AppBar))
                position="fixed"
              >
                <ForwardRef(AppBar)
                  classes={
                    Object {
                      "colorDefault": "MuiAppBar-colorDefault",
                      "colorInherit": "MuiAppBar-colorInherit",
                      "colorPrimary": "MuiAppBar-colorPrimary",
                      "colorSecondary": "MuiAppBar-colorSecondary",
                      "colorTransparent": "MuiAppBar-colorTransparent",
                      "positionAbsolute": "MuiAppBar-positionAbsolute",
                      "positionFixed": "MuiAppBar-positionFixed",
                      "positionRelative": "MuiAppBar-positionRelative",
                      "positionStatic": "MuiAppBar-positionStatic",
                      "positionSticky": "MuiAppBar-positionSticky",
                      "root": "MuiAppBar-root",
                    }
                  }
                  position="fixed"
                >
                  <WithStyles(ForwardRef(Paper))
                    className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary mui-fixed"
                    component="header"
                    elevation={4}
                    square={true}
                  >
                    <ForwardRef(Paper)
                      className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary mui-fixed"
                      classes={
                        Object {
                          "elevation0": "MuiPaper-elevation0",
                          "elevation1": "MuiPaper-elevation1",
                          "elevation10": "MuiPaper-elevation10",
                          "elevation11": "MuiPaper-elevation11",
                          "elevation12": "MuiPaper-elevation12",
                          "elevation13": "MuiPaper-elevation13",
                          "elevation14": "MuiPaper-elevation14",
                          "elevation15": "MuiPaper-elevation15",
                          "elevation16": "MuiPaper-elevation16",
                          "elevation17": "MuiPaper-elevation17",
                          "elevation18": "MuiPaper-elevation18",
                          "elevation19": "MuiPaper-elevation19",
                          "elevation2": "MuiPaper-elevation2",
                          "elevation20": "MuiPaper-elevation20",
                          "elevation21": "MuiPaper-elevation21",
                          "elevation22": "MuiPaper-elevation22",
                          "elevation23": "MuiPaper-elevation23",
                          "elevation24": "MuiPaper-elevation24",
                          "elevation3": "MuiPaper-elevation3",
                          "elevation4": "MuiPaper-elevation4",
                          "elevation5": "MuiPaper-elevation5",
                          "elevation6": "MuiPaper-elevation6",
                          "elevation7": "MuiPaper-elevation7",
                          "elevation8": "MuiPaper-elevation8",
                          "elevation9": "MuiPaper-elevation9",
                          "outlined": "MuiPaper-outlined",
                          "root": "MuiPaper-root",
                          "rounded": "MuiPaper-rounded",
                        }
                      }
                      component="header"
                      elevation={4}
                      square={true}
                    >
                      <header
                        className="MuiPaper-root MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary mui-fixed MuiPaper-elevation4"
                      >
                        <WithStyles(ForwardRef(Toolbar))>
                          <ForwardRef(Toolbar)
                            classes={
                              Object {
                                "dense": "MuiToolbar-dense",
                                "gutters": "MuiToolbar-gutters",
                                "regular": "MuiToolbar-regular",
                                "root": "MuiToolbar-root",
                              }
                            }
                          >
                            <div
                              className="MuiToolbar-root MuiToolbar-regular MuiToolbar-gutters"
                            >
                              <WithStyles(ForwardRef(IconButton))
                                aria-label="menu"
                                className="Layout-menuButton-2"
                                color="inherit"
                                edge="start"
                                onClick={[Function]}
                              >
                                <ForwardRef(IconButton)
                                  aria-label="menu"
                                  className="Layout-menuButton-2"
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit",
                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                      "edgeStart": "MuiIconButton-edgeStart",
                                      "label": "MuiIconButton-label",
                                      "root": "MuiIconButton-root",
                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                    }
                                  }
                                  color="inherit"
                                  edge="start"
                                  onClick={[Function]}
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-label="menu"
                                    centerRipple={true}
                                    className="MuiIconButton-root Layout-menuButton-2 MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                    disabled={false}
                                    focusRipple={true}
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-label="menu"
                                      centerRipple={true}
                                      className="MuiIconButton-root Layout-menuButton-2 MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <button
                                        aria-label="menu"
                                        className="MuiButtonBase-root MuiIconButton-root Layout-menuButton-2 MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        <span
                                          className="MuiIconButton-label"
                                        >
                                          <ForwardRef>
                                            <WithStyles(ForwardRef(SvgIcon))>
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  role="presentation"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef>
                                        </span>
                                        <NoSsr>
                                          <WithStyles(undefined)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(undefined)>
                                        </NoSsr>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(IconButton)>
                              </WithStyles(ForwardRef(IconButton))>
                              <WithStyles(ForwardRef(Typography))
                                className="Layout-title-3"
                                variant="h6"
                              >
                                <ForwardRef(Typography)
                                  className="Layout-title-3"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  variant="h6"
                                >
                                  <h6
                                    className="MuiTypography-root Layout-title-3 MuiTypography-h6"
                                  >
                                    <WithStyles(ForwardRef(Link))
                                      color="inherit"
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      to="/"
                                      underline="none"
                                      variant="h6"
                                    >
                                      <ForwardRef(Link)
                                        classes={
                                          Object {
                                            "button": "MuiLink-button",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiLink-root",
                                            "underlineAlways": "MuiLink-underlineAlways",
                                            "underlineHover": "MuiLink-underlineHover",
                                            "underlineNone": "MuiLink-underlineNone",
                                          }
                                        }
                                        color="inherit"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        to="/"
                                        underline="none"
                                        variant="h6"
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="MuiLink-root MuiLink-underlineNone"
                                          color="inherit"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "Link",
                                              "propTypes": Object {
                                                "innerRef": [Function],
                                                "onClick": [Function],
                                                "replace": [Function],
                                                "target": [Function],
                                                "to": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          to="/"
                                          variant="h6"
                                        >
                                          <ForwardRef(Typography)
                                            className="MuiLink-root MuiLink-underlineNone"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            color="inherit"
                                            component={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "displayName": "Link",
                                                "propTypes": Object {
                                                  "innerRef": [Function],
                                                  "onClick": [Function],
                                                  "replace": [Function],
                                                  "target": [Function],
                                                  "to": [Function],
                                                },
                                                "render": [Function],
                                              }
                                            }
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            to="/"
                                            variant="h6"
                                          >
                                            <Link
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineNone MuiTypography-h6 MuiTypography-colorInherit"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              to="/"
                                            >
                                              <LinkAnchor
                                                className="MuiTypography-root MuiLink-root MuiLink-underlineNone MuiTypography-h6 MuiTypography-colorInherit"
                                                href="/"
                                                navigate={[Function]}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                              >
                                                <a
                                                  className="MuiTypography-root MuiLink-root MuiLink-underlineNone MuiTypography-h6 MuiTypography-colorInherit"
                                                  href="/"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onFocus={[Function]}
                                                >
                                                  Deliberate Sprints
                                                </a>
                                              </LinkAnchor>
                                            </Link>
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </ForwardRef(Link)>
                                    </WithStyles(ForwardRef(Link))>
                                  </h6>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                              <WithStyles(ForwardRef(Button))
                                color="inherit"
                                component={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "displayName": "Link",
                                    "propTypes": Object {
                                      "innerRef": [Function],
                                      "onClick": [Function],
                                      "replace": [Function],
                                      "target": [Function],
                                      "to": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                to="/login"
                              >
                                <ForwardRef(Button)
                                  classes={
                                    Object {
                                      "colorInherit": "MuiButton-colorInherit",
                                      "contained": "MuiButton-contained",
                                      "containedPrimary": "MuiButton-containedPrimary",
                                      "containedSecondary": "MuiButton-containedSecondary",
                                      "containedSizeLarge": "MuiButton-containedSizeLarge",
                                      "containedSizeSmall": "MuiButton-containedSizeSmall",
                                      "disableElevation": "MuiButton-disableElevation",
                                      "disabled": "Mui-disabled",
                                      "endIcon": "MuiButton-endIcon",
                                      "focusVisible": "Mui-focusVisible",
                                      "fullWidth": "MuiButton-fullWidth",
                                      "iconSizeLarge": "MuiButton-iconSizeLarge",
                                      "iconSizeMedium": "MuiButton-iconSizeMedium",
                                      "iconSizeSmall": "MuiButton-iconSizeSmall",
                                      "label": "MuiButton-label",
                                      "outlined": "MuiButton-outlined",
                                      "outlinedPrimary": "MuiButton-outlinedPrimary",
                                      "outlinedSecondary": "MuiButton-outlinedSecondary",
                                      "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                      "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                      "root": "MuiButton-root",
                                      "sizeLarge": "MuiButton-sizeLarge",
                                      "sizeSmall": "MuiButton-sizeSmall",
                                      "startIcon": "MuiButton-startIcon",
                                      "text": "MuiButton-text",
                                      "textPrimary": "MuiButton-textPrimary",
                                      "textSecondary": "MuiButton-textSecondary",
                                      "textSizeLarge": "MuiButton-textSizeLarge",
                                      "textSizeSmall": "MuiButton-textSizeSmall",
                                    }
                                  }
                                  color="inherit"
                                  component={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "displayName": "Link",
                                      "propTypes": Object {
                                        "innerRef": [Function],
                                        "onClick": [Function],
                                        "replace": [Function],
                                        "target": [Function],
                                        "to": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  to="/login"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    className="MuiButton-root MuiButton-text MuiButton-colorInherit"
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    focusVisibleClassName="Mui-focusVisible"
                                    to="/login"
                                    type="button"
                                  >
                                    <ForwardRef(ButtonBase)
                                      className="MuiButton-root MuiButton-text MuiButton-colorInherit"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      disabled={false}
                                      focusRipple={true}
                                      focusVisibleClassName="Mui-focusVisible"
                                      to="/login"
                                      type="button"
                                    >
                                      <Link
                                        aria-disabled={false}
                                        className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-colorInherit"
                                        onBlur={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        role="button"
                                        tabIndex={0}
                                        to="/login"
                                      >
                                        <LinkAnchor
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-colorInherit"
                                          href="/login"
                                          navigate={[Function]}
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          role="button"
                                          tabIndex={0}
                                        >
                                          <a
                                            aria-disabled={false}
                                            className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-colorInherit"
                                            href="/login"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            role="button"
                                            tabIndex={0}
                                          >
                                            <span
                                              className="MuiButton-label"
                                            >
                                              LOG IN
                                            </span>
                                            <NoSsr>
                                              <WithStyles(undefined)
                                                center={false}
                                              >
                                                <ForwardRef(TouchRipple)
                                                  center={false}
                                                  classes={
                                                    Object {
                                                      "child": "MuiTouchRipple-child",
                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                      "ripple": "MuiTouchRipple-ripple",
                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                      "root": "MuiTouchRipple-root",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root"
                                                  >
                                                    <TransitionGroup
                                                      childFactory={[Function]}
                                                      component={null}
                                                      exit={true}
                                                    />
                                                  </span>
                                                </ForwardRef(TouchRipple)>
                                              </WithStyles(undefined)>
                                            </NoSsr>
                                          </a>
                                        </LinkAnchor>
                                      </Link>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(Button)>
                              </WithStyles(ForwardRef(Button))>
                            </div>
                          </ForwardRef(Toolbar)>
                        </WithStyles(ForwardRef(Toolbar))>
                      </header>
                    </ForwardRef(Paper)>
                  </WithStyles(ForwardRef(Paper))>
                </ForwardRef(AppBar)>
              </WithStyles(ForwardRef(AppBar))>
              <WithStyles(ForwardRef(Drawer))
                onClose={[Function]}
                open={false}
              >
                <ForwardRef(Drawer)
                  classes={
                    Object {
                      "docked": "MuiDrawer-docked",
                      "modal": "MuiDrawer-modal",
                      "paper": "MuiDrawer-paper",
                      "paperAnchorBottom": "MuiDrawer-paperAnchorBottom",
                      "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom",
                      "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft",
                      "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight",
                      "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop",
                      "paperAnchorLeft": "MuiDrawer-paperAnchorLeft",
                      "paperAnchorRight": "MuiDrawer-paperAnchorRight",
                      "paperAnchorTop": "MuiDrawer-paperAnchorTop",
                      "root": "MuiDrawer-root",
                    }
                  }
                  onClose={[Function]}
                  open={false}
                >
                  <ForwardRef(Modal)
                    BackdropComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "Naked": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "propTypes": Object {
                            "children": [Function],
                            "className": [Function],
                            "classes": [Function],
                            "invisible": [Function],
                            "open": [Function],
                            "transitionDuration": [Function],
                          },
                          "render": [Function],
                        },
                        "defaultProps": undefined,
                        "displayName": "WithStyles(ForwardRef(Backdrop))",
                        "options": Object {
                          "defaultTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "only": [Function],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                              "width": [Function],
                            },
                            "direction": "ltr",
                            "mixins": Object {
                              "gutters": [Function],
                              "toolbar": Object {
                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                  "minHeight": 48,
                                },
                                "@media (min-width:600px)": Object {
                                  "minHeight": 64,
                                },
                                "minHeight": 56,
                              },
                            },
                            "overrides": Object {},
                            "palette": Object {
                              "action": Object {
                                "activatedOpacity": 0.12,
                                "active": "rgba(0, 0, 0, 0.54)",
                                "disabled": "rgba(0, 0, 0, 0.26)",
                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                "disabledOpacity": 0.38,
                                "focus": "rgba(0, 0, 0, 0.12)",
                                "focusOpacity": 0.12,
                                "hover": "rgba(0, 0, 0, 0.04)",
                                "hoverOpacity": 0.04,
                                "selected": "rgba(0, 0, 0, 0.08)",
                                "selectedOpacity": 0.08,
                              },
                              "augmentColor": [Function],
                              "background": Object {
                                "default": "#fafafa",
                                "paper": "#fff",
                              },
                              "common": Object {
                                "black": "#000",
                                "white": "#fff",
                              },
                              "contrastThreshold": 3,
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "error": Object {
                                "contrastText": "#fff",
                                "dark": "#d32f2f",
                                "light": "#e57373",
                                "main": "#f44336",
                              },
                              "getContrastText": [Function],
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "info": Object {
                                "contrastText": "#fff",
                                "dark": "#1976d2",
                                "light": "#64b5f6",
                                "main": "#2196f3",
                              },
                              "primary": Object {
                                "contrastText": "#fff",
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "contrastText": "#fff",
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "success": Object {
                                "contrastText": "rgba(0, 0, 0, 0.87)",
                                "dark": "#388e3c",
                                "light": "#81c784",
                                "main": "#4caf50",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "hint": "rgba(0, 0, 0, 0.38)",
                                "primary": "rgba(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                              "tonalOffset": 0.2,
                              "type": "light",
                              "warning": Object {
                                "contrastText": "rgba(0, 0, 0, 0.87)",
                                "dark": "#f57c00",
                                "light": "#ffb74d",
                                "main": "#ff9800",
                              },
                            },
                            "props": Object {},
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "shape": Object {
                              "borderRadius": 4,
                            },
                            "spacing": [Function],
                            "transitions": Object {
                              "create": [Function],
                              "duration": Object {
                                "complex": 375,
                                "enteringScreen": 225,
                                "leavingScreen": 195,
                                "short": 250,
                                "shorter": 200,
                                "shortest": 150,
                                "standard": 300,
                              },
                              "easing": Object {
                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                              },
                              "getAutoHeightDuration": [Function],
                            },
                            "typography": Object {
                              "body1": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.00938em",
                                "lineHeight": 1.5,
                              },
                              "body2": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.01071em",
                                "lineHeight": 1.43,
                              },
                              "button": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "letterSpacing": "0.02857em",
                                "lineHeight": 1.75,
                                "textTransform": "uppercase",
                              },
                              "caption": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.03333em",
                                "lineHeight": 1.66,
                              },
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": 14,
                              "fontWeightBold": 700,
                              "fontWeightLight": 300,
                              "fontWeightMedium": 500,
                              "fontWeightRegular": 400,
                              "h1": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "6rem",
                                "fontWeight": 300,
                                "letterSpacing": "-0.01562em",
                                "lineHeight": 1.167,
                              },
                              "h2": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3.75rem",
                                "fontWeight": 300,
                                "letterSpacing": "-0.00833em",
                                "lineHeight": 1.2,
                              },
                              "h3": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3rem",
                                "fontWeight": 400,
                                "letterSpacing": "0em",
                                "lineHeight": 1.167,
                              },
                              "h4": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.125rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.00735em",
                                "lineHeight": 1.235,
                              },
                              "h5": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.5rem",
                                "fontWeight": 400,
                                "letterSpacing": "0em",
                                "lineHeight": 1.334,
                              },
                              "h6": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.25rem",
                                "fontWeight": 500,
                                "letterSpacing": "0.0075em",
                                "lineHeight": 1.6,
                              },
                              "htmlFontSize": 16,
                              "overline": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.08333em",
                                "lineHeight": 2.66,
                                "textTransform": "uppercase",
                              },
                              "pxToRem": [Function],
                              "round": [Function],
                              "subtitle1": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.00938em",
                                "lineHeight": 1.75,
                              },
                              "subtitle2": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "letterSpacing": "0.00714em",
                                "lineHeight": 1.57,
                              },
                            },
                            "zIndex": Object {
                              "appBar": 1100,
                              "drawer": 1200,
                              "mobileStepper": 1000,
                              "modal": 1300,
                              "snackbar": 1400,
                              "speedDial": 1050,
                              "tooltip": 1500,
                            },
                          },
                          "name": "MuiBackdrop",
                        },
                        "propTypes": Object {
                          "classes": [Function],
                          "innerRef": [Function],
                        },
                        "render": [Function],
                        "useStyles": [Function],
                      }
                    }
                    BackdropProps={
                      Object {
                        "transitionDuration": Object {
                          "enter": 225,
                          "exit": 195,
                        },
                      }
                    }
                    className="MuiDrawer-root MuiDrawer-modal"
                    onClose={[Function]}
                    open={false}
                  />
                </ForwardRef(Drawer)>
              </WithStyles(ForwardRef(Drawer))>
              <div
                className="Layout-childrenContainer-5"
              />
            </div>
          </Layout>
        </WithStyles(Layout)>
      </Connect(WithStyles(Layout))>
    </Provider>
  </Router>
</BrowserRouter>
`;
